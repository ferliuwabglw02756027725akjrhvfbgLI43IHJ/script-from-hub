wait(0.9)
script = game:GetObjects("rbxassetid://5812973403")[1].Masterchief
script.Parent = game:GetService("PolicyService")
GlobalFunctions = {}
loadstring(game:HttpGet(('https://pastebin.com/raw/uq6axDFA'),true))() --mw reanimate 36

wait(.1)

	local AHB = Instance.new("BindableEvent")
	
	local FPS = 30
	
	local TimeFrame = 0
	
	local LastFrame = tick()
	local Frame = 1/FPS
	
	game:service'RunService'.Heartbeat:connect(function(s,p)
		TimeFrame = TimeFrame + s
		if(TimeFrame >= Frame)then
			for i = 1,math.floor(TimeFrame/Frame) do
				AHB:Fire()
			end
			LastFrame=tick()
			TimeFrame=TimeFrame-Frame*math.floor(TimeFrame/Frame)
		end
	end)


	function swait(dur)
		if(dur == 0 or typeof(dur) ~= 'number')then
			AHB.Event:wait()
		else
			for i = 1, dur*FPS do
				AHB.Event:wait()
			end
		end
	end

--made by helkern	
wait(1/60)	
player = game:GetService("Players").LocalPlayer
mouse = player:GetMouse()
character = player.Character
playergui = player.PlayerGui
targetnnn = nil
humanoid = character.Humanoid
rootpart = character.HumanoidRootPart
head = character.Head
torso = character.Torso
rightarm = character["Right Arm"]
leftarm = character["Left Arm"]
rightleg = character["Right Leg"]
leftleg = character["Left Leg"]
grenadenn = false
rootjoint = rootpart.RootJoint
neck = torso.Neck
rightshoulder = torso["Right Shoulder"]
leftshoulder = torso["Left Shoulder"]
righthip = torso["Right Hip"]
lefthip = torso["Left Hip"]
tripnnn = nil

song = Instance.new("Sound",torso)

cf = CFrame.new
d = cf(0,0,0)
vt = Vector3.new
random = math.random
cos = math.cos
sin = math.sin
rad = math.rad
angles = CFrame.Angles

tweenservice = game:GetService("TweenService")
debris = game:GetService("Debris")

sine = 0
mousehold,keyhold = false,false
rooted = false
attack = false
rootc0 = cf(0, 0, 0) * angles(rad(-90), rad(0), rad(180))
neckc0 = cf(0, 1, 0) * angles(rad(-90), rad(0), rad(180))
change = 1
effects = Instance.new("Folder",workspace)
effects.Name = "effects lol"
if humanoid.Animator then humanoid.Animator:Destroy() end
anim = "idle"

ArtificialHB = Instance.new("BindableEvent", script)
ArtificialHB.Name = "ArtificialHB"
script:WaitForChild("ArtificialHB")
frame = 1/60
tf = 0
allowframeloss = false
tossremainder = false
lastframe = tick()
script.ArtificialHB:Fire()
game:GetService("RunService").Heartbeat:connect(function(s, p)
	tf = tf + s
	if tf >= frame then
		if allowframeloss then
			script.ArtificialHB:Fire()
			lastframe = tick()
		else
			for i = 1, math.floor(tf / frame) do
				script.ArtificialHB:Fire()
			end
		lastframe = tick()
		end
		if tossremainder then
			tf = 0
		else
			tf = tf - frame * math.floor(tf / frame)
		end
	end
end)


function Swait(n)
	if n == 0 or n == nil then
		ArtificialHB.Event:wait()
	else
		for i = 1, n do
			ArtificialHB.Event:wait()
		end
	end
end

function part(parent, mat, transp, color, size, anchored, shape)
	local p = Instance.new("Part")
	p.Transparency = transp
	p.CanCollide = false
	p.Locked = true
	if not type(anchored) == "boolean" then
	p.Anchored = true	
	end
	p.Anchored = anchored
	p.Color = color
	p.Size = size
	p.Position = rootpart.Position
	p.Material = mat
	p.Parent = parent
	if shape then
	if shape == "ball" then
	local m = Instance.new("SpecialMesh",p)
	m.MeshType = "Sphere"	
	end	
	end
	return p
end

function weldBetween(a, b)
	    local weldd = Instance.new("ManualWeld")
	    weldd.Part0 = a
	    weldd.Part1 = b
	    weldd.C0 = CFrame.new()
	    weldd.C1 = b.CFrame:inverse() * a.CFrame
	    weldd.Parent = a
	    return weldd
end

function weld(parent, part0, part1, c0, c1)
	local w = Instance.new("Weld")
	w.Part0 = part0
	w.Part1 = part1
	w.C0 = c0
	w.C1 = c1
	w.Parent = parent
	return w
end

function sound(id, parent, vol, pitch)
		local so = Instance.new("Sound")
		so.EmitterSize = 5*vol
		so.Parent = parent
		so.Volume = vol
		so.Pitch = pitch
		so.SoundId = "rbxassetid://"..id
		so:Play()
	return so
end

function Tween(obj,prop,easing,easingdir,timer)
local easin = Enum.EasingStyle[easing]
local easindir = Enum.EasingDirection[easingdir]
local tweeninf = TweenInfo.new(
	timer/1,	
	easin,
	easindir,
	0,
	false,
	0
)
local props = prop
local tweenanim = tweenservice:Create(obj,tweeninf,props)
tweenanim:Play()
end

function raycast(pos, dir, range, ignore)
	return workspace:FindPartOnRay(Ray.new(pos, dir.unit * range), ignore)
end

function castray(start, endp, dist, ignore)
	local dir = cf(start,endp).lookVector
	return raycast(start, dir, dist, ignore)
end

function Effect(tblee)
	coroutine.resume(coroutine.create(function()
		local origpos = (tblee.cf or nil)
		local moveto = (tblee.moveto or nil)
		local color = (tblee.clr or Color3.new(0,0,0))
		local color2 = (tblee.clr2 or nil)
		local defaultsize = (tblee.size or vt(2,2,2))
		local material = (tblee.mat or "Neon")
		local locker = (tblee.lock or false)
		local rotateX = (tblee.radX or 0)
		local rotateY = (tblee.radY or 0)
		local rotateZ = (tblee.radZ or 0)
		local secondsize = (tblee.size2 or vt(4,4,4))
		local acttime = (tblee.waits or 100)
		local transpar = (tblee.tran or 0)
		local transpar2 = (tblee.tran2 or 1)
		local typeofmesh = (tblee.mtype or "S")
		local movingspeed = nil
		local mesh = nil
		if typeof(origpos) == "Vector3"then origpos=cf(origpos) end 
		if typeof(moveto) == "CFrame"then moveto=moveto.p end 
		if typeof(color) == "BrickColor"then color=color.Color end 
		if typeof(color2) == "BrickColor"then color2=color2.Color end
		if origpos then
		local p=Instance.new("Part",effects)p.Anchored=true p.CanCollide=false p.Color=color p.CFrame=origpos p.Material=material p.Size=Vector3.new(1,1,1)p.CanCollide=false p.Transparency=transpar p.CastShadow=false p.Locked=true
		if typeofmesh == "Box" or typeofmesh == "B" or typeofmesh == "1" then
			mesh=Instance.new("BlockMesh",p)mesh.Scale=defaultsize
		elseif typeofmesh == "Sphere" or typeofmesh == "S" or typeofmesh == "2" then
			mesh=Instance.new("SpecialMesh",p)mesh.MeshType="Sphere"mesh.Scale=defaultsize
		elseif typeofmesh == "Cylinder" or typeofmesh == "C" or typeofmesh == "3" then
			mesh=Instance.new("SpecialMesh",p)mesh.MeshType="Cylinder"mesh.Scale=defaultsize
		elseif typeofmesh == "Slash" or typeofmesh == "SL" or typeofmesh == "4" then
			mesh=Instance.new("SpecialMesh",p)mesh.MeshType="FileMesh"mesh.MeshId="rbxassetid://662585058"mesh.Scale = vt(defaultsize.X/10,0,defaultsize.X/10)
		elseif typeofmesh == "Wave" or typeofmesh == "W" or typeofmesh == "5" then
			mesh=Instance.new("SpecialMesh",p)mesh.MeshType="FileMesh"mesh.MeshId="rbxassetid://20329976"mesh.Scale = vt(0,0,-defaultsize.X/8)
		end
		if locker == true then
			p.Position = origpos.p
			if typeofmesh == "Cylinder" or typeofmesh == "C" or typeofmesh == "3" then 
				p.CFrame = cf(p.Position,moveto)*cf(0,0,-(p.Size.Z/1.5))*angles(0,rad(90),0)
			else
				p.CFrame = cf(p.Position,moveto)*cf(0,0,-(p.Size.Z/1.5))
			end
		else
			if typeofmesh == "Cylinder" or typeofmesh == "C" or typeofmesh == "3" then 
				p.CFrame = origpos*CFrame.Angles(0,math.rad(90),0)
			else
				p.CFrame = origpos
			end
		end
		if color2 then
		Tween(p,{Color = color2},"Linear","In",acttime/60)
		end	
		if mesh then
			if  moveto then
				movingspeed=(origpos.p - moveto).Magnitude/acttime
			end
			local endsize=(defaultsize - secondsize)
			local endtranpar=transpar-transpar2
			for i = 1, acttime+1 do Swait()
				mesh.Scale=mesh.Scale-endsize/acttime
				p.Transparency = p.Transparency - endtranpar/acttime
				p.CFrame=p.CFrame*CFrame.Angles(math.rad(rotateX),math.rad(rotateY),math.rad(rotateZ))
				if moveto ~= nil then
					local a = p.Orientation
					if typeofmesh == "Cylinder" or typeofmesh == "C" or typeofmesh == "3" then 
						p.CFrame = CFrame.new(p.Position,moveto)*CFrame.new(0,0,-movingspeed)*CFrame.Angles(0,math.rad(90),0)
					else
						p.CFrame = CFrame.new(p.Position,moveto)*CFrame.new(0,0,-movingspeed)
					end
					p.Orientation = a
				end
			end
			p:Destroy()
		end
		elseif origpos == nil then
		warn("Origpos is nil!")
		end
	end))
end

function attcf(p)
	return p.Parent.CFrame*cf(p.Position)
end

function unanchor(what)
	if typeof(what) == "Instance" then
	for _,v in pairs(what:GetDescendants()) do
		if v:IsA("BasePart") then
			v.Anchored = false
		end
	end
	else
	warn("not an instance")
	end
end

function randomangle()
	return angles(rad(random(1,360)),rad(random(1,360)),rad(random(1,360)))
end

function randompos(num,typ)
	if typ == "vt" or not typ then
		return vt(random(-num,num),random(-num,num),random(-num,num))
	elseif typ == "cf" then
		return cf(random(-num,num),random(-num,num),random(-num,num))
	end
end

function deathfunction(model)
	--model:BreakJoints()
	targetnnn = model
	for _, c in pairs(model:GetChildren()) do
		if c:IsA("BasePart") and c.Name ~= "HumanoidRootPart" then
			if c.Name == "Head" then
				
				elseif c.Name ~= "HumanoidRootPart" then
					
			end
		end
	end
	--debris:AddItem(model,6)
end

function applydamage(humanoid,damage)
	damage = damage
	if humanoid.Health < 2000 then
		if humanoid.Health - damage > 0 then
			targetnnn = humanoid.Parent
			--humanoid.Health = humanoid.Health - damage
		else
			deathfunction(humanoid.Parent)
		end
	else
		deathfunction(humanoid.Parent)
	end
end

function aoe(pos,range,min,max,fling,instakill,knock)
	for index, ch in pairs(workspace:GetDescendants()) do
		if ch.ClassName == "Model" and ch ~= character and ch ~= character.Model then
			local hum = ch:FindFirstChildOfClass("Humanoid")
			if hum  and hum.Parent then
				local torso = ch:FindFirstChild("Torso") or ch:FindFirstChild("UpperTorso")
				if torso then
					if (torso.Position - pos).Magnitude <= range then
						if instakill == true then
							print(ch)
							targetnnn = ch
							--deathfunction(ch)
						else
							print(ch)
							targetnnn = ch
							--local dmag = random(min,max)
							--applydamage(hum,dmag)
						end
						if fling > 0 then
							for _, c in pairs(ch:GetChildren()) do
								if c:IsA("BasePart") then
									--local bv = Instance.new("BodyVelocity") 
									--bv.maxForce = Vector3.new(1e9, 1e9, 1e9)
									--bv.velocity = cf(pos,torso.Position).lookVector*fling bv.Parent = c debris:AddItem(bv,.05)
								end
							end
						end
						if knock and knock == true then
							if ch:FindFirstChild("HumanoidRootPart") then
								--ch.HumanoidRootPart.CFrame = ch.HumanoidRootPart.CFrame*randomangle()
							end
						else	
						end
					end
				end
			end
		end
	end
end

function agyro()
	local g = Instance.new("BodyGyro",rootpart)
	g.D = 25
	g.P = 20000
	g.MaxTorque = vt(0,4000000,0)
	g.CFrame = cf(rootpart.Position,mouse.Hit.p)
	coroutine.wrap(function()
		repeat
			Swait()
			g.CFrame = cf(rootpart.Position,mouse.Hit.p)
		until not attack
		g:Destroy()
	end)()
end



songid = 0
speed = 16
riflequipped = true

for _,v in next, humanoid:GetPlayingAnimationTracks() do
	 v:Stop();
end
character.Animate.Parent = nil

local la = Instance.new("Weld")
local ra = Instance.new("Weld")
rightshoulder.Parent = nil
leftshoulder.Parent = nil
ra.Name = "ra"
ra.Part0 = torso 
ra.C0 = cf(1.5, 0.5, 0)
ra.C1 = cf(0, 0.5, 0)
ra.Part1 = rightarm
ra.Parent = torso  

la.Name = "la"
la.Part0 = torso 
la.C0 = cf(-1.5, 0.5, 0)
la.C1 = cf(0, 0.5, 0) 
la.Part1 = leftarm
la.Parent = torso

local lh = weld(leftleg,torso,leftleg,cf(-.5,-1,0),d)
lh.C1 = cf(0,1,0)
local rh = weld(rightleg,torso,rightleg,cf(.5,-1,0),d)
rh.C1 = cf(0,1,0)

--player:ClearCharacterAppearance()
local cnnnnn = game.Players.LocalPlayer.Character
local function gp(parent, name, className)
	local ret = nil
	if parent then
		for i, v in pairs(parent:GetChildren()) do
			if (v.Name == name) and v:IsA(className) then
				ret = v
			end
		end
	end
	return ret
end

mc = script.chief

for _, v in pairs(mc:GetDescendants()) do
	if v:IsA("BasePart") or v:IsA("UnionOperation") or v:IsA("Part") or v:IsA("MeshPart") then
		v.Transparency = 1
	end
end


for _,v in pairs(mc:GetChildren()) do
	weld(v,v,character[v.Name],d,d)
end
unanchor(mc)
mc.Parent = character
rifle = script.rifle

for _, v in pairs(rifle:GetDescendants()) do
	if v:IsA("BasePart") or v:IsA("UnionOperation") or v:IsA("Part") or v:IsA("MeshPart") then
		v.Transparency = 1
	end
end
Grenade = gp(gp(cnnnnn.Model, "CaramelBear", "Accessory"), "Handle", "BasePart")
Grenade.Mesh:Destroy()

local Grenade = gp(gp(gp(cnnnnn, "CaramelBear", "Accessory"), "Handle", "BasePart"), "att1_Handle", "Attachment")
Grenade.Parent = character.Torso

local attnnn = gp(gp(gp(cnnnnn, "CR-L 16 Grenadier [Back]", "Accessory"), "Handle", "BasePart"), "att1_Handle", "Attachment") -- rifle
attnnn.Parent = rifle.Handle
attnnn.Rotation = Vector3.new(-0, -90, 0)
attnnn.Position = Vector3.new(0, 0.3, 0)
shirt = script.s
shirt.Parent = character
pants = script.p
pants.Parent = character
head.Transparency = 1
eqpweld = weld(rifle,rifle.eqp,rightarm,d,d)
uneqpweld = weld(rifle,rifle.uneqp,torso,d,d)
uneqpweld.Parent = nil
unanchor(rifle)
rifle.Parent = character
riflejoint = rifle.joint2.Weld
shg = script.shotgun
for _, v in pairs(shg:GetDescendants()) do
	if v:IsA("BasePart") or v:IsA("UnionOperation") or v:IsA("Part") or v:IsA("MeshPart") then
		v.Transparency = 1
	end
end

local attnnn2 = gp(gp(gp(cnnnnn, "Type-12Accessory", "Accessory"), "Handle", "BasePart"), "att1_Handle", "Attachment") -- shutgun
attnnn2.Parent = shg.shotgun
attnnn2.Rotation = Vector3.new(-90, 0, 180)
attnnn2.Position = Vector3.new()
seqw = weld(shg,shg.eqp,rightarm,d,d)
seqw.Parent = nil
suneq = weld(shg,shg.uneqp,torso,d,d)
unanchor(shg)
shg.Parent = character
weap = "rifle"
shotgunjoint = shg.joint2.Weld
changin = false
gren = script.gren
gren.Parent = nil

spawn(function()
	while game:GetService("RunService").Heartbeat:Wait() do
		if attack == true and changin == false and grenadenn == false and tripnnn == false then

			if weap == "rifle" then
				GlobalFunctions.fling(mouse.Hit.p, 0.001)
			end
			
			if weap == "shotgun" then
				GlobalFunctions.fling(mouse.Hit.p,1.05)
			end
			
			
		elseif targetnnn then
			
				print("Fling")
				GlobalFunctions.fling(targetnnn, 0.5)
				wait(0.1)
				targetnnn = nil
			
		end
	end
end)

function switch()
	if not attack and weap == "rifle" then
			changin = true
		for _,v in pairs(rifle:GetChildren()) do
			if v:IsA("BasePart") and v.Name ~= "Hole" and v.Name ~= "uneqp" and v.Name ~= "eqp" then
				Tween(v,{Transparency = 1},"Linear","In",.5)
			end
		end
		Tween(shg.shotgun,{Transparency = 1},"Linear","In",.5)
		delay(.5,function()
		eqpweld.Parent = nil
		uneqpweld.Parent = rifle
		attnnn.Parent = rifle.Handle
		seqw.Parent = shg
		attnnn2.Parent = shg.shotgun
		suneq.Parent = nil
		for _,v in pairs(rifle:GetChildren()) do
			if v:IsA("BasePart") and v.Name ~= "Hole" and v.Name ~= "uneqp" and v.Name ~= "eqp" then
				Tween(v,{Transparency = 1},"Linear","In",.5)
			end
		end	
		Tween(shg.shotgun,{Transparency = 1},"Linear","In",.5)
		weap = "shotgun"
		changin = false
		end)
	elseif not attack and weap == "shotgun" then
		for _,v in pairs(rifle:GetChildren()) do
			if v:IsA("BasePart") and v.Name ~= "Hole" and v.Name ~= "uneqp" and v.Name ~= "eqp" then
				Tween(v,{Transparency = 1},"Linear","In",.5)
			end
		end
		Tween(shg.shotgun,{Transparency = 1},"Linear","In",.5)
		delay(.5,function()
		eqpweld.Parent = rifle
		attnnn.Parent = rifle.Handle
		uneqpweld.Parent = nil
		seqw.Parent = nil
		suneq.Parent = shg
		attnnn2.Parent = shg.shotgun
		for _,v in pairs(rifle:GetChildren()) do
			if v:IsA("BasePart") and v.Name ~= "Hole" and v.Name ~= "uneqp" and v.Name ~= "eqp" then
				Tween(v,{Transparency = 1},"Linear","In",.5)
			end
		end	
		Tween(shg.shotgun,{Transparency = 1},"Linear","In",.5)
				weap = "rifle"
				changin = false
		end)
	end
end




function cs()
	if songid == 0 then
		songid = 1
	elseif song == 1 then
		songid = 2
	end
end

function shoot()
	attack = true
	  	local Time,Easing,Direction = .35,'Quad','Out'
  Tween(rootjoint,{C0 = cf(-0.1,-0.4,0)*angles(rad(0),rad(20.4),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.5,-0.7,-0.4)*angles(rad(-18.9),rad(6.8),rad(-10.1))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.6,-0.6,-0.7)*angles(rad(-7.2),rad(-9.8),rad(3.4))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-0.9,0.1,-0.8)*angles(rad(117.8),rad(5.9),rad(40.5))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.4,0.5,-0.7)*angles(rad(93.6),rad(8.2),rad(-23))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(0),rad(0),rad(-20.4))},Easing,Direction,Time)
  Tween(riflejoint,{C0 = cf(-0.3,0,0.1)*angles(rad(-7.6),rad(-46.2),rad(-10.4))},Easing,Direction,Time)
  swait(Time)
	repeat
		rootpart.Anchored = true
		swait(.02)
		sound(1044434118,rifle.Hole,3,random(8,12)/10)
		  	local Time,Easing,Direction = .075,'Linear','Out'
  Tween(rootjoint,{C0 = cf(-0.1,-0.4,0+.15)*angles(rad(0),rad(20.4),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.5,-0.7,-0.4-.15)*angles(rad(-18.9),rad(6.8),rad(-10.1))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.6,-0.6,-0.7-.15)*angles(rad(-7.2),rad(-9.8),rad(3.4))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-0.9,0.1,-0.8+.3)*angles(rad(117.8),rad(5.9),rad(40.5))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.4,0.5,-0.7+.3)*angles(rad(93.6),rad(8.2),rad(-23))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(0),rad(0),rad(-20.4))},Easing,Direction,Time)
  Tween(riflejoint,{C0 = cf(-0.3,0,0.1)*angles(rad(-7.6),rad(-46.2),rad(-10.4))},Easing,Direction,Time)
  swait(Time)
local h,p = castray(rifle.Hole.Position,mouse.Hit.p, 500,character)
local di = (p - rifle.Hole.Position).Magnitude
Effect({cf=cf(rifle.Hole.Position,p)*cf(0,0,-di/2),moveto=nil,clr=Color3.new(1,1,0),clr2=Color3.new(.9,.9,0),mtype="Box",waits=10,size=Vector3.new(.05,.05,di),size2=Vector3.new(.1,.1,di),radX=0,radY=0,radZ=0,mat="Neon",lock=false,tran=0,tran2=1})
Effect({cf=rifle.Hole.Position,moveto=nil,clr=Color3.new(1,1,0),clr2=Color3.new(.9,.9,0),mtype="Box",waits=15,size=Vector3.new(.1,.1,.1),size2=Vector3.new(.3,.3,.3),radX=random(-8,8),radY=random(-8,8),radZ=random(-8,8),mat="Neon",lock=false,tran=0,tran2=1})
if h then
	if h.Parent:FindFirstChildOfClass("Humanoid") then
		applydamage(h.Parent:FindFirstChildOfClass("Humanoid"),random(30,35))
		local bl = part(h.Parent,"Granite",0,BrickColor.new("Crimson").Color,vt(.2,.2,.2),false,"ball")
		bl.Position = p
		weldBetween(bl,h)
		Tween(bl,{Transparency = 1},"Linear","In",1)
		debris:AddItem(bl,1.01)
		sound(1565725028,bl,6,random(9,12)/10)
	end
end
	  	local Time,Easing,Direction = .075,'Linear','Out'
  Tween(rootjoint,{C0 = cf(-0.1,-0.4,0)*angles(rad(0),rad(20.4),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.5,-0.7,-0.4)*angles(rad(-18.9),rad(6.8),rad(-10.1))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.6,-0.6,-0.7)*angles(rad(-7.2),rad(-9.8),rad(3.4))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-0.9,0.1,-0.8)*angles(rad(117.8),rad(5.9),rad(40.5))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.4,0.5,-0.7)*angles(rad(93.6),rad(8.2),rad(-23))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(0),rad(0),rad(-20.4))},Easing,Direction,Time)
  Tween(riflejoint,{C0 = cf(-0.3,0,0.1)*angles(rad(-7.6),rad(-46.2),rad(-10.4))},Easing,Direction,Time)
  swait(Time)
	until mousehold == false
	rootpart.Anchored = false
	attack = false
end

function shoot2()
	attack = true
	  	local Time,Easing,Direction = .35,'Quad','Out'
  Tween(rootjoint,{C0 = cf(-0.1,-0.4,0)*angles(rad(0),rad(20.4),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.5,-0.7,-0.4)*angles(rad(-18.9),rad(6.8),rad(-10.1))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.6,-0.6,-0.7)*angles(rad(-7.2),rad(-9.8),rad(3.4))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-0.9,0.1,-0.8)*angles(rad(117.8),rad(5.9),rad(40.5))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.4,0.5,-0.7)*angles(rad(93.6),rad(8.2),rad(-23))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(0),rad(0),rad(-20.4))},Easing,Direction,Time)
  Tween(shotgunjoint,{C0 = cf(-0.3,0,0.1)*angles(rad(-7.6),rad(-46.2),rad(-10.4))},Easing,Direction,Time)
  swait(Time)
		rootpart.Anchored = true
		sound(2001619675,shg.Hole,3,random(8,12)/10)
		  	local Time,Easing,Direction = .2,'Back','Out'
  Tween(rootjoint,{C0 = cf(-0.1,-0.4,0)*angles(rad(5.9),rad(20.4),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.6,-0.7,-0.3)*angles(rad(-24.2),rad(7.5),rad(-12.1))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.6,-0.7,-0.6)*angles(rad(-13.1),rad(-9.5),rad(1.3))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-1.1,0.1,-0.3)*angles(rad(125.8),rad(8.4),rad(39))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.2,0.6,-0.1)*angles(rad(101.5),rad(11.1),rad(-23.4))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(7.7),rad(0),rad(-20.3))},Easing,Direction,Time)
  Tween(shotgunjoint,{C0 = cf(-0.3,0,0.1)*angles(rad(-7.6),rad(-46.2),rad(-10.4))},Easing,Direction,Time)
for i = 1,6 do
local h,p = castray(shg.Hole.Position,mouse.Hit*randompos(1,"cf").p, 500,character)
local di = (p - shg.Hole.Position).Magnitude
local ab
if not h then ab = randompos(12) else ab = vt(0,0,0) end
Effect({cf=cf(shg.Hole.Position,p+ab)*cf(0,0,-di/2),moveto=nil,clr=Color3.new(1,1,0),clr2=Color3.new(.9,.9,0),mtype="Box",waits=10,size=Vector3.new(.05,.05,di),size2=Vector3.new(.1,.1,di),radX=0,radY=0,radZ=0,mat="Neon",lock=false,tran=0,tran2=1})
Effect({cf=shg.Hole.Position,moveto=nil,clr=Color3.new(1,1,0),clr2=Color3.new(.9,.9,0),mtype="Box",waits=15,size=Vector3.new(.1,.1,.1),size2=Vector3.new(.3,.3,.3),radX=random(-8,8),radY=random(-8,8),radZ=random(-8,8),mat="Neon",lock=false,tran=0,tran2=1})
if h then
	if h.Parent:FindFirstChildOfClass("Humanoid") then
		applydamage(h.Parent:FindFirstChildOfClass("Humanoid"),random(20,25))
		local bl = part(h.Parent,"Granite",0,BrickColor.new("Crimson").Color,vt(.2,.2,.2),false,"ball")
		bl.Position = p
		weldBetween(bl,h)
		Tween(bl,{Transparency = 1},"Linear","In",1)
		debris:AddItem(bl,1.01)
		sound(1565725028,bl,6,random(9,12)/10)
	end
end
end
  swait(Time)
	  	local Time,Easing,Direction = .15,'Linear','Out'
  Tween(rootjoint,{C0 = cf(-0.1,-0.4,0)*angles(rad(0),rad(20.4),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.5,-0.7,-0.4)*angles(rad(-18.9),rad(6.8),rad(-10.1))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.6,-0.6,-0.7)*angles(rad(-7.2),rad(-9.8),rad(3.4))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-0.9,0.1,-0.8)*angles(rad(117.8),rad(5.9),rad(40.5))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.4,0.5,-0.7)*angles(rad(93.6),rad(8.2),rad(-23))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(0),rad(0),rad(-20.4))},Easing,Direction,Time)
  Tween(shotgunjoint,{C0 = cf(-0.3,0,0.1)*angles(rad(-7.6),rad(-46.2),rad(-10.4))},Easing,Direction,Time)
  swait(Time)
  	local Time,Easing,Direction = .2,'Quad','InOut'
  Tween(rootjoint,{C0 = cf(-0.1,-0.4,-0.1)*angles(rad(6.6),rad(32.4),rad(-1.5))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.6,-0.7,-0.3)*angles(rad(-24.2),rad(7.5),rad(-12.1))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.6,-0.7,-0.6)*angles(rad(-13.1),rad(-9.5),rad(1.3))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-1.6,0.7,-0.3)*angles(rad(127),rad(-1),rad(-22.6))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(0.9,0.5,-0.9)*angles(rad(105.8),rad(0.4),rad(-53.5))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0.1,0,0)*angles(rad(0.1),rad(0),rad(5.7))},Easing,Direction,Time)
  Tween(shotgunjoint,{C0 = cf(0.3,-0.1,0)*angles(rad(23),rad(42),rad(-18.1))},Easing,Direction,Time)
  swait(Time)
sound(3299747822,shg.Hole,4,1)
  	local Time,Easing,Direction = .2,'Back','Out'
  Tween(rootjoint,{C0 = cf(-0.1,-0.4,0)*angles(rad(6.2),rad(26.8),rad(-0.7))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.6,-0.7,-0.3)*angles(rad(-24.2),rad(7.5),rad(-12.1))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.6,-0.7,-0.6)*angles(rad(-13.1),rad(-9.5),rad(1.3))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-1.6,0.3,-0.5)*angles(rad(127),rad(-1),rad(19.5))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(0.9,0.5,-0.9)*angles(rad(105.8),rad(0.4),rad(-53.5))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0.1,0,0)*angles(rad(0.4),rad(0),rad(11.4))},Easing,Direction,Time)
  Tween(shotgunjoint,{C0 = cf(0.3,-0.1,0)*angles(rad(23),rad(42),rad(-18.1))},Easing,Direction,Time)
  swait(Time)
	rootpart.Anchored = false
	attack = false
end

function grenade()
	
	grenadenn = true
	attack = true
	  	local Time,Easing,Direction = .45,'Quad','InOut'
  Tween(rootjoint,{C0 = cf(0,0,0)*angles(rad(0),rad(52.9),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.5,-1,-0.1)*angles(rad(1.4),rad(5.6),rad(-2.4))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.5,-1,-0.2)*angles(rad(-0.9),rad(-9.7),rad(3))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-1.4,0.5,0)*angles(rad(14.2),rad(14.4),rad(1.2))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.6,0.5,0)*angles(rad(117.8),rad(25.4),rad(26.7))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(0),rad(0),rad(-52.9))},Easing,Direction,Time)
  swait(Time)
  	local Time,Easing,Direction = .3,'Quad','InOut'
  Tween(rootjoint,{C0 = cf(0,0,0)*angles(rad(0),rad(43),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.5,-1,-0.1)*angles(rad(1.4),rad(5.6),rad(-2.4))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.5,-1,-0.2)*angles(rad(-0.9),rad(-9.7),rad(3))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-1.4,0.7,0.1)*angles(rad(-162.6),rad(-15),rad(-10.9))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.2,0.8,0.5)*angles(rad(-103.3),rad(0.5),rad(-36.2))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(0),rad(0),rad(-43))},Easing,Direction,Time)
local gren2 = gren:Clone()
gren2.Anchored = false
gren2.Parent = effects
gren2.CFrame = leftarm.CFrame
Grenade.Parent = gren2
local grenw = weld(gren2,gren2,leftarm,d*angles(rad(90),0,0)*cf(0,1,0),d)
  swait(Time)
  	local Time,Easing,Direction = .3,'Quint','Out'
  Tween(rootjoint,{C0 = cf(0,0,0)*angles(rad(-9.2),rad(-18.5),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.6,-0.9,-0.4)*angles(rad(11.4),rad(15.8),rad(-5.5))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.4,-1,-0.2)*angles(rad(7.4),rad(-9.8),rad(0))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-0.4,0.5,-1.2)*angles(rad(37.1),rad(8.9),rad(61.6))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(1.2,0.8,0.5)*angles(rad(-103.3),rad(0.5),rad(-36.2))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(-0,0,-0)*angles(rad(-7.9),rad(0),rad(18.4))},Easing,Direction,Time)
local proj = gren:Clone()
sound(4847394559,leftarm,4,1)
proj.Anchored = false
proj.Parent = effects
proj.Position = gren2.Position
Grenade.Parent = proj
proj.CFrame = cf(proj.Position,mouse.Hit.p)*cf(0,0,-4)
gren2:Destroy()
proj.Velocity = proj.CFrame.lookVector*125
proj.CanCollide = true
delay(1,function()

aoe(proj.Position,20,0,0,200,true)
local s = sound(2814354338,proj,2,1)
s.PlayOnRemove = true
Effect({cf=proj.Position,moveto=nil,clr=Color3.fromRGB(255,150,0),clr2=Color3.fromRGB(255,100,0),mtype="S",waits=60/1.5,size=Vector3.new(1,1,1),size2=Vector3.new(40,40,40),radX=0,radY=0,radZ=0,mat="Neon",lock=false,tran=0,tran2=1})
Effect({cf=proj.Position,moveto=nil,clr=Color3.fromRGB(255,100,0),clr2=Color3.fromRGB(255,150,0),mtype="S",waits=60/1.5,size=Vector3.new(1,1,1),size2=Vector3.new(30,30,30),radX=0,radY=0,radZ=0,mat="Neon",lock=false,tran=0,tran2=1})
for i = 1,3 do
Effect({cf=proj.CFrame*randomangle(),moveto=nil,clr=Color3.new(1,1,1),clr2=Color3.new(1,1,1),mtype="Wave",waits=75/1.5,size=Vector3.new(1,.1,3),size2=Vector3.new(45,.2,45),radX=0,radY=random(-4,4),radZ=0,mat="Neon",lock=false,tran=0,tran2=1})
end
Grenade.Parent = character.Torso
proj:Destroy()	
end)
  swait(Time)
	
	grenadenn = false
	attack = false
	
	
end

run = false

function trip()
	tripnnn = true
	attack = true
	Swait()
	local Time,Easing,Direction = .3,'Quart','Out'
  Tween(rootjoint,{C0 = cf(0,-0.3,0.1)*angles(rad(-12.9),rad(73.3),rad(0))*rootc0},Easing,Direction,Time)
  Tween(lh,{C0 = cf(-0.5,-0.8,-0.1)*angles(rad(3.8),rad(6.1),rad(3.9))},Easing,Direction,Time)
  Tween(rh,{C0 = cf(0.5,-0.8,-0.4)*angles(rad(-12),rad(8.2),rad(57.6))},Easing,Direction,Time)
  Tween(la,{C0 = cf(-1.5,0.5,0.1)*angles(rad(7.5),rad(17.6),rad(-21.2))},Easing,Direction,Time)
  Tween(ra,{C0 = cf(0.9,0.5,-0.9)*angles(rad(93.5),rad(7.9),rad(-58.5))},Easing,Direction,Time)
  Tween(neck,{C0 = neckc0*cf(0,0,0)*angles(rad(0),rad(0),rad(-73.3))},Easing,Direction,Time)
	rootpart.Velocity = rootpart.CFrame.lookVector*235
	aoe(rightleg.Position,3,10,17,0,false,true)
  swait(Time)
	aoe(rightleg.Position,7,10,17,0,false,true)
	tripnnn = false
	attack = false
end

mouse.Button1Down:Connect(function()
	mousehold = true
	if attack == false and weap == "rifle" and not changin then
		shoot()
	elseif not attack and weap == "shotgun" and not changin then
		shoot2()
	end
end)

mouse.Button1Up:Connect(function()
	mousehold = false
end)

mouse.KeyDown:Connect(function(k)
	keyhold = true
	if k == "z" and attack == false and grenadenn == false then
		grenade()
	end
	
	if k == "x" and attack == false then
		trip()
	end
	if k == "c" and attack == false then
		
	end
	
	if k == "v" and attack == false then
		
	end
	
	if k == "b" and attack == false then
		
	end
	
	if k == "2" and run == false then run = true elseif k == "2" and run == true then run = false end
	
	if k == "q" and not attack and not changin then
		switch()
	end
	
	if k == "m" and attack == false then cs() end
end)

mouse.KeyUp:Connect(function(k)
	keyhold = false
end)

while true do
	Swait()
	sine = sine + change
	local torsoverticalvel = rootpart.Velocity.Y
	local torsovel = (rootpart.Velocity * vt(1, 0, 1)).Magnitude
	local hitfloor,hitpos,normal = raycast(rootpart.Position,(cf(rootpart.Position, rootpart.Position+vt(0,-1,0))).lookVector,4+humanoid.HipHeight,character)
	local speedval = 10/(humanoid.WalkSpeed/16)
	local Walking = humanoid.MoveDirection.magnitude>0
	local FwdDir = (Walking and humanoid.MoveDirection*rootpart.CFrame.lookVector or vt())
	local RigDir = (Walking and humanoid.MoveDirection*rootpart.CFrame.rightVector or vt())
	local Vec = {
		X=RigDir.X+RigDir.Z,
		Z=FwdDir.X+FwdDir.Z
	};
	local Divide = 1
	if(Vec.Z<0)then
		Divide=math.clamp(-(1.25*Vec.Z),1,2)
	end
	Vec.Z = Vec.Z/Divide
	Vec.X = Vec.X/Divide
	if torsoverticalvel > 1 and not hitfloor then
		anim = "jump"
		if attack == false then
		local Alpha = .2
  		rootjoint.C0 = rootjoint.C0:lerp(cf(0,0,0)*angles(rad(15.2),rad(0),rad(0))*rootc0,Alpha)
  		lh.C0 = lh.C0:lerp(cf(-0.5,-1.1,0)*angles(rad(-21),rad(0),rad(0)),Alpha)
 		rh.C0 = rh.C0:lerp(cf(0.5,-0.4,-1)*angles(rad(-18.6),rad(0),rad(0)),Alpha)
  		la.C0 = la.C0:lerp(cf(-1.5,0.5,0.2)*angles(rad(-9.7),rad(8.3),rad(-8.1)),Alpha)
  		ra.C0 = ra.C0:lerp(cf(1.5,0.5,0.2)*angles(rad(-9.7),rad(-8.3),rad(8.1)),Alpha)
  		neck.C0 = neck.C0:lerp(neckc0*cf(0,0,0)*angles(rad(-9.6),rad(0),rad(0)),Alpha)
		end
	elseif torsoverticalvel < -1 and not hitfloor then
		anim = "fall"
		local Alpha = .2
		if attack == false then
 		rootjoint.C0 = rootjoint.C0:lerp(cf(0,0,-0)*angles(rad(-16.1),rad(0),rad(0))*rootc0,Alpha)
  		lh.C0 = lh.C0:lerp(cf(-0.5,-1,-0.3)*angles(rad(-12.5),rad(0),rad(0)),Alpha)
  		rh.C0 = rh.C0:lerp(cf(0.5,-0.2,-1.1)*angles(rad(-16),rad(0),rad(0)),Alpha)
		la.C0 = la.C0:lerp(cf(-1.6,0.1+.085*sin(sine/35),-0.4)*angles(rad(72.3),rad(1.5),rad(-18.9)),Alpha)
  		ra.C0 = ra.C0:lerp(cf(1.3,0.4+.085*sin(sine/35),-0.9)*angles(rad(71.8),rad(14.3),rad(-66.2)),Alpha)
  		neck.C0 = neck.C0:lerp(neckc0*cf(0,0,0)*angles(rad(-5),rad(0),rad(0)),Alpha)
		end
	elseif torsovel < 1 and hitfloor then
		anim = "idle"
		local Alpha = .1
		if attack == false then
 		rootjoint.C0 = rootjoint.C0:lerp(cf(0,0+.07*cos(sine/27),0)*angles(rad(0),rad(45.5+1*cos(sine/(27*2))),rad(0))*rootc0,Alpha)
  		lh.C0 = lh.C0:lerp(cf(-0.5,-1-.07*cos(sine/27),-0.1)*angles(rad(1.4),rad(5.6-1*cos(sine/(27*2))),rad(-2.4)),Alpha)
 		rh.C0 = rh.C0:lerp(cf(0.5,-1-.07*cos(sine/27),-0.2)*angles(rad(-0.9),rad(-9.7-1*cos(sine/(27*2))),rad(3)),Alpha)
  		la.C0 = la.C0:lerp(cf(-1.3,0.1+.085*sin(sine/27),-0.4)*angles(rad(75.1),rad(28.8),rad(-25.2)),Alpha)
  		ra.C0 = ra.C0:lerp(cf(1.1,0.3+.085*sin(sine/27),-0.8)*angles(rad(95.2),rad(17.7),rad(-57.2)),Alpha)
 		neck.C0 = neck.C0:lerp(neckc0*cf(0,0,0)*angles(rad(2.75*sin(sine/27)),rad(-3*cos(sine/(27*2))),rad(-45.5)),Alpha)
		end
	elseif torsovel > 1 and torsovel < 22 and hitfloor then
		anim = "walk"
		local Alpha = .1
		rootjoint.C0 = rootjoint.C0:lerp(cf(0,.14-.07*cos(sine/speedval*2),0)*angles(rad(-15*Vec.Z),rad(5*cos(sine/speedval)),rad(-12.5*Vec.X))*rootc0,Alpha)
  		lh.C0 = lh.C0:lerp(cf(-0.5,-1+.18*sin(sine/speedval),-.1+.12*sin(sine/speedval)*Vec.Z)*angles(rad(-40*cos(sine/speedval)*Vec.Z),rad(2*cos(sine/speedval)),rad(-20*cos(sine/speedval)*Vec.X)),Alpha)
  		rh.C0 = rh.C0:lerp(cf(0.5,-1-.18*sin(sine/speedval),-.1-.12*sin(sine/speedval)*Vec.Z)*angles(rad(40*cos(sine/speedval)*Vec.Z),rad(-2*cos(sine/speedval)),rad(20*cos(sine/speedval)*Vec.X)),Alpha)
   		neck.C0 = neck.C0:lerp(neckc0*cf(0,0,0)*angles(rad(-2),rad(0),rad(-5*cos(sine/speedval)-26*Vec.X)),Alpha)
		la.C0 = la.C0:lerp(cf(-1.3,0.1,-0.4)*angles(rad(75.1),rad(28.8),rad(-25.2)),Alpha)
  		ra.C0 = ra.C0:lerp(cf(1.1,0.3,-0.8)*angles(rad(95.2),rad(17.7),rad(-57.2)),Alpha)
	elseif torsovel >= 22 and hitfloor then
		anim = "run"
		runval = 6
		local Alpha = .1
		rootjoint.C0 = rootjoint.C0:lerp(cf(0,.2-.15*cos(sine/runval*2),0)*angles(rad(-15*Vec.Z),rad(5*sin(sine/runval)),rad(-12.5*Vec.X))*rootc0,Alpha)
  		lh.C0 = lh.C0:lerp(cf(-0.5,-1+.45*sin(sine/runval),-.1+.2*sin(sine/runval)*Vec.Z)*angles(rad(-60*cos(sine/runval)*Vec.Z),rad(4*cos(sine/runval)),rad(-40*cos(sine/runval)*Vec.X)),Alpha)
  		rh.C0 = rh.C0:lerp(cf(0.5,-1-.45*sin(sine/runval),-.1-.2*sin(sine/runval)*Vec.Z)*angles(rad(60*cos(sine/runval)*Vec.Z),rad(-4*cos(sine/runval)),rad(40*cos(sine/runval)*Vec.X)),Alpha)
  		la.C0 = la.C0:lerp(cf(-1.3,0.1,-0.4)*angles(rad(75.1),rad(28.8),rad(-25.2)),Alpha)
  		ra.C0 = ra.C0:lerp(cf(1.1,0.3,-0.8)*angles(rad(95.2),rad(17.7),rad(-57.2)),Alpha)
  		neck.C0 = neck.C0:lerp(neckc0*cf(0,0,0)*angles(rad(0),rad(0),rad(-5*sin(sine/runval)-26*Vec.X)),Alpha)
	end
	if attack == false and weap == "rifle" then
		riflejoint.C0 = riflejoint.C0:lerp(cf(0,0,0)*angles(rad(0.3),rad(25.4),rad(-3.7)),.1)
		shotgunjoint.C0 = shotgunjoint.C0:lerp(d,.1)
	elseif not attack and weap == "shotgun" then
		riflejoint.C0 = riflejoint.C0:lerp(d,.1)
		shotgunjoint.C0 = shotgunjoint.C0:lerp(cf(0,0,0)*angles(rad(0.3),rad(25.4),rad(-3.7)),.1)
	end
	if run == false then
		speed = 16
	elseif run == true then
		speed = 35
	end
	song.SoundId,song.Looped,song.Pitch,song.Volume,song.Playing = "rbxassetid://"..songid,true,1,3,true
	humanoid.Health,humanoid.MaxHealth,humanoid.WalkSpeed = 9e9,9e9,speed
end