    for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("Accessory") then
            if game.Players.LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
                if v.Handle:FindFirstChildWhichIsA("SpecialMesh").MeshId == "rbxassetid://5461503113" then
                    v.Name = "Block1"
                end
            else
                if v.Handle.MeshId == "rbxassetid://5461503113" then
                    v.Name = "Block1"
                end
            end
        end
    end
    setfpscap(60)
    
 while true do
game.Players.LocalPlayer.Character.Humanoid.Sit = false
task.wait()
end

    
    getgenv()._SETTINGS = {
        NoAnimations = false
    }
    
    local Players = game:GetService("Players")
    local Lighting = game:GetService("Lighting")
    local Workspace = game:GetService("Workspace")
    local RunService = game:GetService("RunService")
    
    local Methods = {"RenderStepped", "Stepped", "Heartbeat"}
    local RemovedInstances = {}
    
    local env = {
        Movement = function(LocalCharacter, ScriptCharacter)
            RunService.Stepped:Connect(function()
                if LocalCharacter.Humanoid.Jump == true then
                    ScriptCharacter.Humanoid.Jump = true
                end
            
                ScriptCharacter.Humanoid:Move(LocalCharacter.Humanoid.MoveDirection)
            end)
        end,
    
        SimulationNet = function(Player, Value)
            RunService.RenderStepped:Connect(function()
                sethiddenproperty(Player, "SimulationRadius", Value)
            end)
        end,
    
        ClearAnimations = function(Character, Bool)
            if Bool == true then
                for _,Animation in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Animation:Stop()
                end
            end
        end,
    
        CleanUp = function(Character)
            for _,Instance_ in pairs(Character:GetDescendants()) do
                if Instance_:IsA("Decal") or Instance_:IsA("Part") or Instance_:IsA("MeshPart") then
                    Instance_.Transparency = 1
                end
            end
        end,
    
        NoclipCharacter = function(Character) 
            for _,Instance_ in pairs(Character:GetDescendants()) do
                if Instance_:IsA("Part") or Instance_:IsA("MeshPart") then
                    RunService.Stepped:Connect(function()
                        Instance_.CanCollide = false
                    end)
                end
            end
        end,
    
        Align = function(Part0, Part1, Methods)
            local function syncHRPVel(Instance_, Character)		
                local BodyForce = Instance.new("BodyForce", Instance_)		
    
                local Signal = game.RunService.Heartbeat:connect(function()
                    Instance_.Velocity = Vector3.new(-20, -20, -20)
                end)
                
                for _,Method in pairs(Methods) do
                    local Cframe = game.RunService[Method]:Connect(function()
                        BodyForce.Force = Instance_.CFrame.Position
                    end)
                    
                    if not Instance_ then
                        Cframe:disconnect()
                        Cframe = nil
                    end
                end
                
                for _,Method in pairs(Methods) do
                    local Cframe = game.RunService[Method]:Connect(function()
                        BodyForce.Force = Instance_.CFrame.Position
                    end)
                    
                    if not Instance_ then
                        Cframe:disconnect()
                        Cframe = nil
                    end
                    
                    local Net = game.RunService[Method]:Connect(function()
                        game:GetService("Players").LocalPlayer.ReplicationFocus = game.Players.LocalPlayer.Character
                        settings().Physics.AllowSleep = false
                        settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
                    end)
                end
            end
    
            local Attachment0 = Instance.new("Attachment", Part0)
            local Attachment1 = Instance.new("Attachment", Part1)
    
            local AlignPosition = Instance.new("AlignPosition", Part0)
            local AlignOrientation = Instance.new("AlignOrientation", Part0)
            
            AlignPosition.MaxForce = 9e9
            AlignPosition.Responsiveness = 200
            AlignOrientation.MaxTorque = 9e9
            AlignOrientation.Responsiveness = 200
    
            AlignPosition.Attachment0 = Attachment0
            AlignPosition.Attachment1 = Attachment1
            AlignOrientation.Attachment0 = Attachment0
            AlignOrientation.Attachment1 = Attachment1
    
            if Part0.Name == "Handle" then
                Part0:BreakJoints()
    
                Attachment0.Position = Vector3.new(0, 0, 0)
                Attachment0.Orientation = Vector3.new(90, 0, 0)
    
                if Part0.Parent.Name == "Pal Hair" then
                    Part0.Mesh:Destroy()
                end
            else
                Attachment0.Position = Vector3.new(0, 0, 0)
                Attachment0.Orientation = Vector3.new(0, 0, 0)
            end
    
            syncHRPVel(Part0, game.Players.LocalPlayer.Character)
        end,
    
        UnAnchorCharacter = function(Character)
            for _,Instance_ in pairs(Character:GetDescendants()) do
                if Instance_:IsA("Part") or Instance_:IsA("MeshPart") then
                    Instance_.Anchored = false
                end
            end
        end,
    
        ClearWelds = function(Character)
            local Welds = {
                RightArm = Character.Torso["Right Shoulder"],
                RightLeg = Character.Torso["Right Hip"],
                LeftArm = Character.Torso["Left Shoulder"],
                LeftLeg = Character.Torso["Left Hip"],
                Torso = Character.HumanoidRootPart.RootJoint
            }
    
            for _,Weld in pairs(Welds) do
                Weld:Remove()
            end
        end,
    
        Cframe = function(Part0, Part1, Methods)
            local Cframe = game.RunService["Heartbeat"]:Connect(function()
                Part0.CFrame = Part1.CFrame
            end)
    
            if not Part0 then
                Cframe:disconnect()
                Cframe = nil
            end
        end,
    
        Remove = function(Part)
            table.insert(RemovedInstances, Part.Name)
    
            Part:Destroy()
        end,
    
        setCamera = function(Part)
            Workspace.Camera.CameraSubject = Part
        end,
    
        bodyCollision = function(Humanoid)
            Humanoid:ChangeState(16)
        end
    }
    
    local LocalPlayer = Players.LocalPlayer
    local LocalCharacter = LocalPlayer.Character
    local Animate = LocalCharacter.Animate
    local Humanoid = LocalCharacter.Humanoid
    local HumanoidRootPart = LocalCharacter.HumanoidRootPart
    
    LocalCharacter.Archivable = true
    
    local ScriptCharacter = LocalCharacter:Clone()
    ScriptCharacter.Name = "ScriptCharacter"
    ScriptCharacter.Parent = LocalCharacter
    
    env.CleanUp(ScriptCharacter)
    env.NoclipCharacter(ScriptCharacter)
    env.NoclipCharacter(LocalCharacter)
    env.UnAnchorCharacter(ScriptCharacter)
    env.UnAnchorCharacter(LocalCharacter)
    env.SimulationNet(LocalPlayer, 1000)
    env.ClearWelds(LocalCharacter)
    env.Remove(LocalCharacter["HumanoidRootPart"])
    env.Movement(LocalCharacter, ScriptCharacter)
    env.setCamera(ScriptCharacter.Humanoid)
    env.bodyCollision(LocalCharacter.Humanoid)
    
    if _SETTINGS.NoAnimations == true then
        env.ClearAnimations(ScriptCharacter, true)
    end
    
    env.Align(LocalCharacter["Torso"], ScriptCharacter["Torso"], Methods)
    env.Align(LocalCharacter["Left Arm"], ScriptCharacter["Left Arm"], Methods)
    env.Align(LocalCharacter["Left Leg"], ScriptCharacter["Left Leg"], Methods)
    env.Align(LocalCharacter["Right Arm"], ScriptCharacter["Right Arm"], Methods)
    env.Align(LocalCharacter["Right Leg"], ScriptCharacter["Right Leg"], Methods)
    env.Align(LocalCharacter["Pal Hair"].Handle, ScriptCharacter["Right Leg"], Methods)
    
    local LocalCharacter = game:GetService("Players").LocalPlayer.Character
    local FlingPart = LocalCharacter["Right Leg"]
    
    FlingPart.Transparency = 0.5
    FlingPart.Anchored = false
    
    if FlingPart:FindFirstChildOfClass("AlignPosition") then
        FlingPart:FindFirstChildOfClass("AlignPosition"):Destroy()
    end
    
    if FlingPart:FindFirstChildOfClass("AlignOrientation") then
        FlingPart:FindFirstChildOfClass("AlignOrientation"):Destroy()
    end
    
    local BAVelocity = Instance.new("BodyAngularVelocity", FlingPart)
    BAVelocity.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
    BAVelocity.P = 1000000000000000000000000000
    BAVelocity.AngularVelocity = Vector3.new(10000, 10000, 10000)
    
    local FlingEvent = false
    local FlingEXEvent = false
    local Mouse = game.Players.LocalPlayer:GetMouse()
    local Players = game.Players
    local Hat = LocalCharacter["Block1"].Handle
            local Character = Players.LocalPlayer.Character
    
            function getNearestPlayer()
                local Closet
    
                for _,Player in pairs(Players:GetChildren()) do
                    if Player.Character:FindFirstChild("HumanoidRootPart") and Player.Name ~= game.Players.LocalPlayer.Name then
                        local TargetCharacter = Player.Character
                        local Distance = Player:DistanceFromCharacter(LocalCharacter.Torso.Position)
    
                        if Distance > 10 or (Closet and Distance >= Closet)  then
                            --Pass
                        else
                            return Player
                        end
                    end
                end
            end
    local Hat2 = LocalCharacter["RockAccessory"].Handle		
    local LocalCharacter = game:GetService("Players").LocalPlayer
    local Mouse = LocalCharacter:GetMouse()
    local LocalCharacter = game:GetService("Players").LocalPlayer.Character
    RunService.Heartbeat:Connect(function()
        if FlingEvent == false and FlingEXEvent == false then
            FlingPart.Position = LocalCharacter.Torso.Position + Vector3.new(0, -10, 0)
            Hat2.Position = LocalCharacter.Torso.Position + Vector3.new(0, -10, 0)
        elseif FlingEvent == true and FlingEXEvent == false then
            FlingPart.Position = (getNearestPlayer().Character.HumanoidRootPart.Position)
        end
    end)
    spawn(function()
    while wait() do
        repeat wait() until FlingEXEvent == true
        if FlingEXEvent == true then
            repeat
            FlingPart.Position = Mouse.hit.p
            Hat2.Position = Mouse.hit.p
            wait(.001)
            FlingPart.Position = Hat.Position
            Hat2.Position = Hat.Position
            wait(.001)
            until FlingEXEvent == false
            FlingPart.Position = LocalCharacter.Torso.Position
            Hat2.Position = LocalCharacter.Torso.Position
        end
    end
    end)
    local env1 = {
        Align = function(Part0, Part1, Methods)
            local function syncHRPVel(Instance_, Character)        
                local BodyForce = Instance.new("BodyForce", Instance_)        
    
                local Signal = game.RunService.Heartbeat:connect(function()
                    Instance_.Velocity = Vector3.new(-62.89786648237, 0, -62.89786648237)
                end)
                
                for _,Method in pairs(Methods) do
                    local Cframe = game.RunService[Method]:Connect(function()
                        BodyForce.Force = Instance_.CFrame.Position
                    end)
                    
                    if not Instance_ then
                        Cframe:disconnect()
                        Cframe = nil
                    end
                end
                
                for _,Method in pairs(Methods) do
                    local Cframe = game.RunService[Method]:Connect(function()
                        BodyForce.Force = Instance_.CFrame.Position
                    end)
                    
                    if not Instance_ then
                        Cframe:disconnect()
                        Cframe = nil
                    end
                    
                    local Net = game.RunService[Method]:Connect(function()
                        game:GetService("Players").LocalPlayer.ReplicationFocus = game.Players.LocalPlayer.Character
                        settings().Physics.AllowSleep = false
                        settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
                    end)
                end
            end
    
            local Attachment0 = Instance.new("Attachment", Part0)
            local Attachment1 = Instance.new("Attachment", Part1)
    
            local AlignPosition = Instance.new("AlignPosition", Part0)
            local AlignOrientation = Instance.new("AlignOrientation", Part0)
            
            AlignPosition.MaxForce = 9e9
            AlignPosition.Responsiveness = 200
            AlignOrientation.MaxTorque = 9e9
            AlignOrientation.Responsiveness = 200
    
            AlignPosition.Attachment0 = Attachment0
            AlignPosition.Attachment1 = Attachment1
            AlignOrientation.Attachment0 = Attachment0
            AlignOrientation.Attachment1 = Attachment1
    
            if Part0.Name == "Handle" then
                Part0:BreakJoints()
    
                Attachment0.Position = Vector3.new(0, 0, 0)
                Attachment0.Orientation = Vector3.new(0, 0, 0)
    
                if Part0.Parent.Name == "RockAccessory" then
                    Part0.SpecialMesh:Destroy()
                end
            else
                Attachment0.Position = Vector3.new(0, 0, 0)
                Attachment0.Orientation = Vector3.new(0, 0, 0)
            end
    
            syncHRPVel(Part0, game.Players.LocalPlayer.Character)
        end
    }
    
    local Methods1 = {"RenderStepped", "Stepped", "Heartbeat"}
    env1.Align(LocalCharacter["RockAccessory"].Handle, LocalCharacter["Right Leg"], Methods1)
    wait(0.2)
    local objects = game:GetObjects("rbxassetid://4661906279")
    objects[1].Parent = game.Players.LocalPlayer.Character
    local script = game.Players.LocalPlayer.Character.MainModule["FE Template"]
    --//====================================================\\--
    --||			   CREATED BY SHACKLUSTER
    --\\====================================================//--
    
    wait(0.2)
    
    Player = game:GetService("Players").LocalPlayer
    PlayerGui = Player.PlayerGui
    Cam = workspace.CurrentCamera
    Backpack = Player.Backpack
    Mouse = Player:GetMouse()
    Character = Player.Character.ScriptCharacter
    Humanoid = Character.Humanoid
    RootPart = Character["HumanoidRootPart"]
    Torso = Character["Torso"]
    Head = Character["Head"]
    RightArm = Character["Right Arm"]
    LeftArm = Character["Left Arm"]
    RightLeg = Character["Right Leg"]
    LeftLeg = Character["Left Leg"]
    RootJoint = RootPart["RootJoint"]
    Neck = Torso["Neck"]
    RightShoulder = Torso["Right Shoulder"]
    LeftShoulder = Torso["Left Shoulder"]
    RightHip = Torso["Right Hip"]
    LeftHip = Torso["Left Hip"]
    local sick = Instance.new("Sound",Torso)
    
    IT = Instance.new
    CF = CFrame.new
    VT = Vector3.new
    RAD = math.rad
    C3 = Color3.new
    UD2 = UDim2.new
    BRICKC = BrickColor.new
    ANGLES = CFrame.Angles
    EULER = CFrame.fromEulerAnglesXYZ
    COS = math.cos
    ACOS = math.acos
    SIN = math.sin
    ASIN = math.asin
    ABS = math.abs
    MRANDOM = math.random
    FLOOR = math.floor
    
    --//=================================\\
    --|| 	      USEFUL VALUES
    --\\=================================//
    
    Animation_Speed = 3
    Frame_Speed = 1 / 60 -- (1 / 30) OR (1 / 60)
    local Speed = 55
    local ROOTC0 = CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180))
    local NECKC0 = CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180))
    local RIGHTSHOULDERC0 = CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))
    local LEFTSHOULDERC0 = CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))
    local DAMAGEMULTIPLIER = 1
    local ANIM = "Idle"
    local ATTACK = false
    local TORSOMOVE = 0
    local HOLD = false
    local COMBO = 1
    local Rooted = false
    local SINE = 0
    local KEYHOLD = false
    local CHANGE = 2 / Animation_Speed
    local WALKINGANIM = false
    local VALUE1 = false
    local VALUE2 = false
    local ROBLOXIDLEANIMATION = IT("Animation")
    ROBLOXIDLEANIMATION.Name = "Roblox Idle Animation"
    ROBLOXIDLEANIMATION.AnimationId = "http://www.roblox.com/asset/?id=180435571"
    --ROBLOXIDLEANIMATION.Parent = Humanoid
    local WEAPONGUI = IT("ScreenGui", PlayerGui)
    WEAPONGUI.Name = "Weapon GUI"
    local Effects = IT("Folder", Character)
    Effects.Name = "Effects"
    local ANIMATOR = Humanoid.Animator
    local ANIMATE = Character.Animate
    local UNANCHOR = true
    local AMMO = 15
    
    --//=================================\\
    --\\=================================//
    
    
    --//=================================\\
    --|| SAZERENOS' ARTIFICIAL HEARTBEAT
    --\\=================================//
    
    ArtificialHB = Instance.new("BindableEvent", script)
    ArtificialHB.Name = "ArtificialHB"
    
    script:WaitForChild("ArtificialHB")
    
    frame = Frame_Speed
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    script.ArtificialHB:Fire()
    
    game:GetService("RunService").Heartbeat:connect(function(s, p)
        tf = tf + s
        if tf >= frame then
            if allowframeloss then
                script.ArtificialHB:Fire()
                lastframe = tick()
            else
                for i = 1, math.floor(tf / frame) do
                    script.ArtificialHB:Fire()
                end
            lastframe = tick()
            end
            if tossremainder then
                tf = 0
            else
                tf = tf - frame * math.floor(tf / frame)
            end
        end
    end)
    
    --//=================================\\
    --\\=================================//
    
    --//=================================\\
    --|| 	      SOME FUNCTIONS
    --\\=================================//
    
    function Raycast(POSITION, DIRECTION, RANGE, IGNOREDECENDANTS)
        return workspace:FindPartOnRay(Ray.new(POSITION, DIRECTION.unit * RANGE), IGNOREDECENDANTS)
    end
    
    function PositiveAngle(NUMBER)
        if NUMBER >= 0 then
            NUMBER = 0
        end
        return NUMBER
    end
    
    function NegativeAngle(NUMBER)
        if NUMBER <= 0 then
            NUMBER = 0
        end
        return NUMBER
    end
    local TargetPoint = Vector3.new()
    local mousedownevent = Mouse.Button1Down
    local mouseupevent = Mouse.Button1Up
    local keydownevent = Mouse.KeyDown
    local keyupevent = Mouse.KeyUp
    local prevpos = CFrame.new()
    local prevtarg = nil
    local fakeEvent = Instance.new("BindableEvent")
    coroutine.wrap(function()
      while wait(1/30) do
      local currpos = Mouse.Hit.p
      local currtarg = Mouse.Hit.p
      if currpos ~= prevpos or currtarg ~= prevtarg then
        fakeEvent:Fire(Mouse.Hit.p,Mouse.Target)
        print("provided new mousedata")
      end
      prevpos = currpos
      prevtarg = currtarg
    end
    end)()
    local mousemoveevent = fakeEvent.Event
    mousemoveevent:connect(function(ply,pos,targ)
    if ply == Player then
        TargetPoint = pos
    end
    end)
    function Swait(NUMBER)
        if NUMBER == 0 or NUMBER == nil then
            ArtificialHB.Event:wait()
        else
            for i = 1, NUMBER do
                ArtificialHB.Event:wait()
            end
        end
    end
    
    function CreateMesh(MESH, PARENT, MESHTYPE, MESHID, TEXTUREID, SCALE, OFFSET)
        local NEWMESH = IT(MESH)
        if MESH == "SpecialMesh" then
            NEWMESH.MeshType = MESHTYPE
            if MESHID ~= "nil" and MESHID ~= "" then
                NEWMESH.MeshId = "http://www.roblox.com/asset/?id="..MESHID
            end
            if TEXTUREID ~= "nil" and TEXTUREID ~= "" then
                NEWMESH.TextureId = "http://www.roblox.com/asset/?id="..TEXTUREID
            end
        end
        NEWMESH.Offset = OFFSET or VT(0, 0, 0)
        NEWMESH.Scale = SCALE
        NEWMESH.Parent = PARENT
        return NEWMESH
    end
    
    function CreatePart(FORMFACTOR, PARENT, MATERIAL, REFLECTANCE, TRANSPARENCY, BRICKCOLOR, NAME, SIZE, ANCHOR)
        local NEWPART = IT("Part")
        NEWPART.formFactor = FORMFACTOR
        NEWPART.Reflectance = REFLECTANCE
        NEWPART.Transparency = TRANSPARENCY
        NEWPART.CanCollide = false
        NEWPART.Locked = false
        NEWPART.Anchored = true
        if ANCHOR == false then
            NEWPART.Anchored = false
        end
        NEWPART.BrickColor = BRICKC(tostring(BRICKCOLOR))
        NEWPART.Name = NAME
        NEWPART.Size = SIZE
        NEWPART.Position = Torso.Position
        NEWPART.Material = MATERIAL
        NEWPART.Parent = PARENT
        return NEWPART
    end
    
        local function weldBetween(a, b)
            local weldd = Instance.new("ManualWeld")
            weldd.Part0 = a
            weldd.Part1 = b
            weldd.C0 = CFrame.new()
            weldd.C1 = b.CFrame:inverse() * a.CFrame
            weldd.Parent = a
            return weldd
        end
    
    
    function QuaternionFromCFrame(cf)
        local mx, my, mz, m00, m01, m02, m10, m11, m12, m20, m21, m22 = cf:components()
        local trace = m00 + m11 + m22
        if trace > 0 then 
            local s = math.sqrt(1 + trace)
            local recip = 0.5 / s
            return (m21 - m12) * recip, (m02 - m20) * recip, (m10 - m01) * recip, s * 0.5
        else
            local i = 0
            if m11 > m00 then
                i = 1
            end
            if m22 > (i == 0 and m00 or m11) then
                i = 2
            end
            if i == 0 then
                local s = math.sqrt(m00 - m11 - m22 + 1)
                local recip = 0.5 / s
                return 0.5 * s, (m10 + m01) * recip, (m20 + m02) * recip, (m21 - m12) * recip
            elseif i == 1 then
                local s = math.sqrt(m11 - m22 - m00 + 1)
                local recip = 0.5 / s
                return (m01 + m10) * recip, 0.5 * s, (m21 + m12) * recip, (m02 - m20) * recip
            elseif i == 2 then
                local s = math.sqrt(m22 - m00 - m11 + 1)
                local recip = 0.5 / s return (m02 + m20) * recip, (m12 + m21) * recip, 0.5 * s, (m10 - m01) * recip
            end
        end
    end
     
    function QuaternionToCFrame(px, py, pz, x, y, z, w)
        local xs, ys, zs = x + x, y + y, z + z
        local wx, wy, wz = w * xs, w * ys, w * zs
        local xx = x * xs
        local xy = x * ys
        local xz = x * zs
        local yy = y * ys
        local yz = y * zs
        local zz = z * zs
        return CFrame.new(px, py, pz, 1 - (yy + zz), xy - wz, xz + wy, xy + wz, 1 - (xx + zz), yz - wx, xz - wy, yz + wx, 1 - (xx + yy))
    end
     
    function QuaternionSlerp(a, b, t)
        local cosTheta = a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]
        local startInterp, finishInterp;
        if cosTheta >= 0.0001 then
            if (1 - cosTheta) > 0.0001 then
                local theta = ACOS(cosTheta)
                local invSinTheta = 1 / SIN(theta)
                startInterp = SIN((1 - t) * theta) * invSinTheta
                finishInterp = SIN(t * theta) * invSinTheta
            else
                startInterp = 1 - t
                finishInterp = t
            end
        else
            if (1 + cosTheta) > 0.0001 then
                local theta = ACOS(-cosTheta)
                local invSinTheta = 1 / SIN(theta)
                startInterp = SIN((t - 1) * theta) * invSinTheta
                finishInterp = SIN(t * theta) * invSinTheta
            else
                startInterp = t - 1
                finishInterp = t
            end
        end
        return a[1] * startInterp + b[1] * finishInterp, a[2] * startInterp + b[2] * finishInterp, a[3] * startInterp + b[3] * finishInterp, a[4] * startInterp + b[4] * finishInterp
    end
    
    function Clerp(a, b, t)
        local qa = {QuaternionFromCFrame(a)}
        local qb = {QuaternionFromCFrame(b)}
        local ax, ay, az = a.x, a.y, a.z
        local bx, by, bz = b.x, b.y, b.z
        local _t = 1 - t
        return QuaternionToCFrame(_t * ax + t * bx, _t * ay + t * by, _t * az + t * bz, QuaternionSlerp(qa, qb, t))
    end
    
    function CreateFrame(PARENT, TRANSPARENCY, BORDERSIZEPIXEL, POSITION, SIZE, COLOR, BORDERCOLOR, NAME)
        local frame = IT("Frame")
        frame.BackgroundTransparency = TRANSPARENCY
        frame.BorderSizePixel = BORDERSIZEPIXEL
        frame.Position = POSITION
        frame.Size = SIZE
        frame.BackgroundColor3 = COLOR
        frame.BorderColor3 = BORDERCOLOR
        frame.Name = NAME
        frame.Parent = PARENT
        return frame
    end
    
    function CreateLabel(PARENT, TEXT, TEXTCOLOR, TEXTFONTSIZE, TEXTFONT, TRANSPARENCY, BORDERSIZEPIXEL, STROKETRANSPARENCY, NAME)
        local label = IT("TextLabel")
        label.BackgroundTransparency = 1
        label.Size = UD2(1, 0, 1, 0)
        label.Position = UD2(0, 0, 0, 0)
        label.TextColor3 = TEXTCOLOR
        label.TextStrokeTransparency = STROKETRANSPARENCY
        label.TextTransparency = TRANSPARENCY
        label.FontSize = TEXTFONTSIZE
        label.Font = TEXTFONT
        label.BorderSizePixel = BORDERSIZEPIXEL
        label.TextScaled = false
        label.Text = TEXT
        label.Name = NAME
        label.Parent = PARENT
        return label
    end
    
    function NoOutlines(PART)
        PART.TopSurface, PART.BottomSurface, PART.LeftSurface, PART.RightSurface, PART.FrontSurface, PART.BackSurface = 10, 10, 10, 10, 10, 10
    end
    
    function CreateWeldOrSnapOrMotor(TYPE, PARENT, PART0, PART1, C0, C1)
        local NEWWELD = IT(TYPE)
        NEWWELD.Part0 = PART0
        NEWWELD.Part1 = PART1
        NEWWELD.C0 = C0
        NEWWELD.C1 = C1
        NEWWELD.Parent = PARENT
        return NEWWELD
    end
    
    local S = IT("Sound")
    function CreateSound(ID, PARENT, VOLUME, PITCH, DOESLOOP)
        local NEWSOUND = nil
        coroutine.resume(coroutine.create(function()
            NEWSOUND = S:Clone()
            NEWSOUND.Parent = PARENT
            NEWSOUND.Volume = VOLUME
            NEWSOUND.Pitch = PITCH
            NEWSOUND.SoundId = "http://www.roblox.com/asset/?id="..ID
            NEWSOUND:play()
            if DOESLOOP == true then
                NEWSOUND.Looped = true
            else
                repeat wait(1) until NEWSOUND.Playing == false
                NEWSOUND:remove()
            end
        end))
        return NEWSOUND
    end
    
    function CFrameFromTopBack(at, top, back)
        local right = top:Cross(back)
        return CF(at.x, at.y, at.z, right.x, top.x, back.x, right.y, top.y, back.y, right.z, top.z, back.z)
    end
    
    --WACKYEFFECT({EffectType = "", Size = VT(1,1,1), Size2 = VT(0,0,0), Transparency = 0, Transparency2 = 1, CFrame = CF(), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = C3(1,1,1), SoundID = nil, SoundPitch = nil, SoundVolume = nil})
    function WACKYEFFECT(Table)
        local TYPE = (Table.EffectType or "Sphere")
        local SIZE = (Table.Size or VT(1,1,1))
        local ENDSIZE = (Table.Size2 or VT(0,0,0))
        local TRANSPARENCY = (Table.Transparency or 0)
        local ENDTRANSPARENCY = (Table.Transparency2 or 1)
        local CFRAME = (Table.CFrame or Torso.CFrame)
        local MOVEDIRECTION = (Table.MoveToPos or nil)
        local ROTATION1 = (Table.RotationX or 0)
        local ROTATION2 = (Table.RotationY or 0)
        local ROTATION3 = (Table.RotationZ or 0)
        local MATERIAL = (Table.Material or "Neon")
        local COLOR = (Table.Color or C3(1,1,1))
        local TIME = (Table.Time or 45)
        local SOUNDID = (Table.SoundID or nil)
        local SOUNDPITCH = (Table.SoundPitch or nil)
        local SOUNDVOLUME = (Table.SoundVolume or nil)
        coroutine.resume(coroutine.create(function()
            local PLAYSSOUND = false
            local SOUND = nil
            local EFFECT = CreatePart(3, Effects, MATERIAL, 0, 1, BRICKC("Pearl"), "Effect", VT(1,1,1), true)
            if SOUNDID ~= nil and SOUNDPITCH ~= nil and SOUNDVOLUME ~= nil then
                PLAYSSOUND = true
                SOUND = CreateSound(SOUNDID, EFFECT, SOUNDVOLUME, SOUNDPITCH, false)
            end
            EFFECT.Color = COLOR
            local MSH = nil
            if TYPE == "Sphere" then
                MSH = CreateMesh("SpecialMesh", EFFECT, "Sphere", "", "", SIZE, VT(0,0,0))
            elseif TYPE == "Block" or TYPE == "Box" then
                MSH = IT("BlockMesh",EFFECT)
                MSH.Scale = SIZE
            elseif TYPE == "Wave" then
                MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "20329976", "", SIZE, VT(0,0,-SIZE.X/8))
            elseif TYPE == "Ring" then
                MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "559831844", "", VT(SIZE.X,SIZE.X,0.1), VT(0,0,0))
            elseif TYPE == "Slash" then
                MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "662586858", "", VT(SIZE.X/10,0,SIZE.X/10), VT(0,0,0))
            elseif TYPE == "Round Slash" then
                MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "662585058", "", VT(SIZE.X/10,0,SIZE.X/10), VT(0,0,0))
            elseif TYPE == "Swirl" then
                MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "1051557", "", SIZE, VT(0,0,0))
            elseif TYPE == "Skull" then
                MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "4770583", "", SIZE, VT(0,0,0))
            elseif TYPE == "Crystal" then
                MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "9756362", "", SIZE, VT(0,0,0))
            end
            if MSH ~= nil then
                local MOVESPEED = nil
                if MOVEDIRECTION ~= nil then
                    MOVESPEED = (CFRAME.p - MOVEDIRECTION).Magnitude/TIME
                end
                local GROWTH = SIZE - ENDSIZE
                local TRANS = TRANSPARENCY - ENDTRANSPARENCY
                if TYPE == "Block" then
                    EFFECT.CFrame = CFRAME*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
                else
                    EFFECT.CFrame = CFRAME
                end
                for LOOP = 1, TIME+1 do
                    Swait()
                    MSH.Scale = MSH.Scale - GROWTH/TIME
                    if TYPE == "Wave" then
                        MSH.Offset = VT(0,0,-MSH.Scale.X/8)
                    end
                    EFFECT.Transparency = EFFECT.Transparency - TRANS/TIME
                    if TYPE == "Block" then
                        EFFECT.CFrame = CFRAME*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
                    else
                        EFFECT.CFrame = EFFECT.CFrame*ANGLES(RAD(ROTATION1),RAD(ROTATION2),RAD(ROTATION3))
                    end
                    if MOVEDIRECTION ~= nil then
                        local ORI = EFFECT.Orientation
                        EFFECT.CFrame = CF(EFFECT.Position,MOVEDIRECTION)*CF(0,0,-MOVESPEED)
                        EFFECT.Orientation = ORI
                    end
                end
                if PLAYSSOUND == false then
                    EFFECT:remove()
                else
                    repeat Swait() until SOUND.Playing == false
                    EFFECT:remove()
                end
            else
                if PLAYSSOUND == false then
                    EFFECT:remove()
                else
                    repeat Swait() until SOUND.Playing == false
                    EFFECT:remove()
                end
            end
        end))
    end
    
    function MakeForm(PART,TYPE)
        if TYPE == "Cyl" then
            local MSH = IT("CylinderMesh",PART)
        elseif TYPE == "Ball" then
            local MSH = IT("SpecialMesh",PART)
            MSH.MeshType = "Sphere"
        elseif TYPE == "Wedge" then
            local MSH = IT("SpecialMesh",PART)
            MSH.MeshType = "Wedge"
        end
    end
    
    Debris = game:GetService("Debris")
    
    function CastProperRay(StartPos, EndPos, Distance, Ignore)
        local DIRECTION = CF(StartPos,EndPos).lookVector
        return Raycast(StartPos, DIRECTION, Distance, Ignore)
    end
    
    local Particle = IT("ParticleEmitter",nil)
    Particle.Enabled = false
    Particle.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,1),NumberSequenceKeypoint.new(0.3,0.2),NumberSequenceKeypoint.new(1,1)})
    Particle.LightEmission = 0.5
    Particle.Rate = 150
    Particle.ZOffset = 1
    Particle.Rotation = NumberRange.new(-180, 180)
    Particle.RotSpeed = NumberRange.new(-180, 180)
    Particle.Texture = "http://www.roblox.com/asset/?id=744949545"
    Particle.Color = ColorSequence.new(BRICKC"Dark green".Color)
    --ParticleEmitter({Speed = 5, Drag = 0, Size1 = 1, Size2 = 5, Lifetime1 = 1, Lifetime2 = 1.5, Parent = Torso, Emit = 100, Offset = 360, Enabled = false})
    function ParticleEmitter(Table)
        local PRTCL = Particle:Clone()
        local Speed = Table.Speed or 5
        local Drag = Table.Drag or 0
        local Size1 = Table.Size1 or 1
        local Size2 = Table.Size2 or 5
        local Lifetime1 = Table.Lifetime1 or 1
        local Lifetime2 = Table.Lifetime2 or 1.5
        local Parent = Table.Parent or Torso
        local Emit = Table.Emit or 100
        local Offset = Table.Offset or 360
        local Acel = Table.Acel or VT(0,0,0)
        local Enabled = Table.Enabled or false
        PRTCL.Parent = Parent
        PRTCL.Size = NumberSequence.new(Size1,Size2)
        PRTCL.Lifetime = NumberRange.new(Lifetime1,Lifetime2)
        PRTCL.Speed = NumberRange.new(Speed)
        PRTCL.VelocitySpread = Offset
        PRTCL.Drag = Drag
        PRTCL.Acceleration = Acel
        if Enabled == false then
            PRTCL:Emit(Emit)
            Debris:AddItem(PRTCL,Lifetime2)
        else
            PRTCL.Enabled = true
        end
        return PRTCL
    end
    
    function ProjectileMovement(PROJECTILE,AIM,TIME)
        local HIT,POS = CastProperRay(PROJECTILE.Position,AIM,2000,Character)
        PROJECTILE.CFrame = CF(PROJECTILE.Position,POS) * ANGLES(RAD(0), RAD(0), RAD(MRANDOM(-90,90)))
        local HEIGHT = TIME/5
        local DISTANCE = (PROJECTILE.Position - POS).Magnitude
        for i = 1, TIME do
            Swait()
            PROJECTILE.CFrame = PROJECTILE.CFrame * CF(0,(HEIGHT-(i/2.575))/100,-DISTANCE/TIME)
        end
    end
    
    function GetSphereArea(POS,DISTANCE)
        return CF(POS)*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))*CF(0,0,-DISTANCE).p
    end
    
    --//=================================\\
    --||	     WEAPON CREATION
    --\\=================================//
    
    local WEP = CreatePart(0, Effects, "Neon", 1, 1, BRICKC("Dark blue"), "Bullet", VT(0,1,0), true)
    function SpawnBullet(SIZE)
        AMMO = AMMO + SIZE
        local BULLET = CreatePart(0, Effects, "Neon", 1, 1, BRICKC("Dark blue"), "Bullet", VT(-0.1,-0.1,-0.1)/0, true)
        BULLET.CFrame = WEP.CFrame
        local A = IT("Attachment",BULLET)
        local B = IT("Attachment",BULLET)
        A.Position = VT(0,SIZE/20,0)
        B.Position = VT(0,-SIZE/20,0)
        local Trail = IT("Trail",BULLET)
        Trail.Attachment0 = A
        Trail.Attachment1 = B
        Trail.Lifetime = 0.2
        Trail.LightEmission = 1
        Trail.Color = ColorSequence.new(BRICKC"Dark green".Color)
        Trail.Transparency = NumberSequence.new(1, 1)
        return BULLET
    end
    local FIRING = ParticleEmitter({Speed = 4, Drag = 1, Size1 = 1, Size2 = 0.7, Lifetime1 = 0.2, Lifetime2 = 0.5, Parent = WEP, Emit = 100, Offset = 360, Enabled = true})
    FIRING.Enabled = false
    
    local SKILLTEXTCOLOR = BRICKC"Toothpaste".Color
    local SKILLFONT = "SciFi"
    local SKILLTEXTSIZE = 5
    
    local ATTACKS = {"Mouse-Rapid Fire","Z-Block Bullet"}
    
    for i = 1, #ATTACKS do
        local SKILLFRAME = CreateFrame(WEAPONGUI, 1, 2, UD2(0.74, 0, 0.97-(0.04*i), 0), UD2(0.26, 0, 0.07, 0), C3(0,0,0), C3(0, 0, 0), "Skill Frame")
        local SKILLTEXT = CreateLabel(SKILLFRAME, "["..ATTACKS[i].."]", SKILLTEXTCOLOR, SKILLTEXTSIZE, SKILLFONT, 0, 2, 0, "Skill text")
        SKILLTEXT.TextXAlignment = "Right"
    end
    
    -- [[ (Hat, Part, Mesh) # If true then no mesh if false then mesh ]]
    
    local env1 = {
        Align = function(Part0, Part1, Methods)
            local function syncHRPVel(Instance_, Character)        
                local BodyForce = Instance.new("BodyForce", Instance_)        
    
                local Signal = game.RunService.Heartbeat:connect(function()
                    Instance_.Velocity = Vector3.new(-62.89786648237, 0, -62.89786648237)
                end)
                
                for _,Method in pairs(Methods) do
                    local Cframe = game.RunService[Method]:Connect(function()
                        BodyForce.Force = Instance_.CFrame.Position
                    end)
                    
                    if not Instance_ then
                        Cframe:disconnect()
                        Cframe = nil
                    end
                end
                
                for _,Method in pairs(Methods) do
                    local Cframe = game.RunService[Method]:Connect(function()
                        BodyForce.Force = Instance_.CFrame.Position
                    end)
                    
                    if not Instance_ then
                        Cframe:disconnect()
                        Cframe = nil
                    end
                    
                    local Net = game.RunService[Method]:Connect(function()
                        game:GetService("Players").LocalPlayer.ReplicationFocus = game.Players.LocalPlayer.Character
                        settings().Physics.AllowSleep = false
                        settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
                    end)
                end
            end
    
            local Attachment0 = Instance.new("Attachment", Part0)
            local Attachment1 = Instance.new("Attachment", Part1)
    
            local AlignPosition = Instance.new("AlignPosition", Part0)
            local AlignOrientation = Instance.new("AlignOrientation", Part0)
            
            AlignPosition.MaxForce = 9e9
            AlignPosition.Responsiveness = 200
            AlignOrientation.MaxTorque = 9e9
            AlignOrientation.Responsiveness = 200
    
            AlignPosition.Attachment0 = Attachment0
            AlignPosition.Attachment1 = Attachment1
            AlignOrientation.Attachment0 = Attachment0
            AlignOrientation.Attachment1 = Attachment1
    
            if Part0.Name == "Handle" then
                Part0:BreakJoints()
    
                Attachment0.Position = Vector3.new(0, 0, 0)
                Attachment0.Orientation = Vector3.new(0, 0, 0)
    
                if Part0.Parent.Name == "Block1" then
                    Part0.SpecialMesh:Destroy()
                end
                
                game.RunService.Heartbeat:Connect(function()
                    Part0.CFrame = Part1.CFrame
                end)
            else
                Attachment0.Position = Vector3.new(0, 0, 0)
                Attachment0.Orientation = Vector3.new(0, 0, 0)
            end
    
            syncHRPVel(Part0, game.Players.LocalPlayer.Character)
        end
    }
    
    local Methods1 = {"RenderStepped", "Stepped", "Heartbeat"}
    env1.Align(LocalCharacter["Block1"].Handle, ScriptCharacter.Effects["Bullet"], Methods1)
    
    for i, v in ipairs(game.Players.LocalPlayer.Character.ScriptCharacter:GetDescendants()) do
        pcall(function()
            v.Transparency = 1
        end)
    end
    for i, v in ipairs(game.Players.LocalPlayer.Character.ScriptCharacter.RockAccessory:GetDescendants()) do
        pcall(function()
            v:Destroy()
        end)
    end
    
    --//=================================\\
    --||			DAMAGING
    --\\=================================//
    
    function ApplyDamage(Humanoid,Damage)
        Damage = Damage * DAMAGEMULTIPLIER
        if Humanoid.Health < 0 then
            if Humanoid.Health - Damage > 10 then
            else
            end
        else
        end
    end
    
    function ApplyAoE(POSITION,RANGE,MINDMG,MAXDMG,FLING,INSTAKILL)
        local CHILDREN = workspace:GetDescendants()
        for index, CHILD in pairs(CHILDREN) do
            if CHILD.ClassName == "" and CHILD ~= Character then
                local HUM = CHILD:FindFirstChildOfClass("")
                if HUM then
                    local TORSO = CHILD:FindFirstChild("") or CHILD:FindFirstChild("")
                    if TORSO then
                        if (TORSO.Position - POSITION).Magnitude <= RANGE then
                            if INSTAKILL == true then
                            else
                                local DMG = MRANDOM(MINDMG,MAXDMG)
                                ApplyDamage(HUM,DMG)
                            end
                            if FLING > 0 then
                                for _, c in pairs(CHILD:GetChildren()) do
                                    if c:IsA("BasePart") then
                                        local bv = Instance.new("BodyVelocity") 
                                        bv.maxForce = Vector3.new(1e9, 1e9, 1e9)
                                        bv.velocity = CF(POSITION,TORSO.Position).lookVector*FLING
                                        bv.Parent = c
                                        Debris:AddItem(bv,0.05)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    
    --//=================================\\
    --||	ATTACK FUNCTIONS AND STUFF
    --\\=================================//
    
    function Rapid()
        if AMMO > 0 then
            FlingEXEvent = true
            ATTACK = true
            Rooted = false
            repeat
                Swait()
                local BULLET = SpawnBullet(0.25)
                FIRING:Emit(2)
                AMMO = AMMO + 0.25
                coroutine.resume(coroutine.create(function()
                    ProjectileMovement(BULLET,Mouse.Hit.p,5)
                    BULLET.Transparency = 1
                    Debris:AddItem(BULLET,0.3)
                    ApplyAoE(BULLET.Position,7,25,30,5,false)
                    WACKYEFFECT({EffectType = "Sphere", Size = VT(3,3,3), Size2 = VT(4,4,4), Transparency = 0, Transparency2 = 1, CFrame = CF(BULLET.Position), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = BULLET.Color, SoundID = 314970790, SoundPitch = MRANDOM(8,14)/5, SoundVolume = 1})
                end))
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.45, 0.5, -0.3) * ANGLES(RAD(90 +2 * COS(SINE / 6)), RAD(25), RAD(-10 + 2 * SIN(SINE / 6))) * RIGHTSHOULDERC0, 1 / Animation_Speed)
            until HOLD == false or AMMO <= 0
            TORSOMOVE = 0
            FlingEXEvent = false
            ATTACK = false
            Rooted = false
        end
    end
    function BlockBullet()
        local SIZE = 4
        if AMMO > SIZE then
            FlingEXEvent=true
            ATTACK = true
            Rooted = false
            for i=0, 0.2, 0.1 / Animation_Speed do
                Swait()
                TORSOMOVE = 35
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90 + 2 * COS(SINE / 6)), RAD(25), RAD(0 + 2 * SIN(SINE / 6))) * RIGHTSHOULDERC0, 2 / Animation_Speed)
            end
            local BULLET = SpawnBullet(SIZE)
            FIRING:Emit(50)
            AMMO = AMMO + SIZE
            coroutine.resume(coroutine.create(function()
                CreateSound(90655239, BULLET, 3, 1, false)
                ProjectileMovement(BULLET,Mouse.Hit.p,15)
                BULLET.Transparency = 1
                Debris:AddItem(BULLET,0.3)
                ApplyAoE(BULLET.Position,40,25,60,40,false)
                WACKYEFFECT({EffectType = "Sphere", Size = VT(3,3,3), Size2 = VT(13,13,13)*2, Transparency = 0, Transparency2 = 1, CFrame = CF(BULLET.Position), MoveToPos = Mouse.Hit.p, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = BULLET.Color, SoundID = 314970790, SoundPitch = MRANDOM(8,14)/10, SoundVolume = 3})
                for i = 1, 5 do
                    WACKYEFFECT({EffectType = "Sphere", Size = VT(3,3,3), Size2 = VT(MRANDOM(6,8),MRANDOM(6,8),MRANDOM(6,8))*4, Transparency = 0, Transparency2 = 1, CFrame = CF(BULLET.Position), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = BULLET.Color, SoundID = nil, SoundPitch = nil, SoundVolume = nil})
                end
                for i = 1, 2 do
                    WACKYEFFECT({Time = 60, EffectType = "Sphere", Size = VT(3,3,3), Size2 = VT(MRANDOM(6,8),MRANDOM(6,8),MRANDOM(6,8))*6, Transparency = 0, Transparency2 = 1, CFrame = CF(BULLET.Position), MoveToPos = GetSphereArea(BULLET.Position,2), RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = C3(20/255,20/255,20/255), SoundID = nil, SoundPitch = nil, SoundVolume = nil})
                end
            end))
            for i=0, 0.1, 0.1 / Animation_Speed do
                Swait()
                TORSOMOVE = 15
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0 * COS(SINE / 6)), RAD(25), RAD(90 + 2 * SIN(SINE / 6))) * RIGHTSHOULDERC0, 2 / Animation_Speed)
            end
            TORSOMOVE = 0
            FlingEXEvent=false
            ATTACK = false
            Rooted = false
        end
    end
    function Asteroid()
        if AMMO == 15 then
            ATTACK = true
            Rooted = false
            local BULLETS = {}
            local Part = WEP
            local SIZE = Part.Size.X + Part.Size.Y + Part.Size.Z
            local XOffset = Part.Size.X*3
            local YOffset = Part.Size.Y*3
            local ZOffset = Part.Size.Z*3
            for i=0, 2, 0.1 / Animation_Speed do
                Swait()
                TORSOMOVE = 0
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(120 + 2 * COS(SINE / 6)), RAD(25), RAD(10 + 2 * SIN(SINE / 6))) * RIGHTSHOULDERC0, 2 / Animation_Speed)
            end
            WACKYEFFECT({Time = 15, EffectType = "Box", Size = VT(AMMO,AMMO,AMMO)/10, Size2 = VT(AMMO,AMMO,AMMO)/2, Transparency = 0, Transparency2 = 1, CFrame = WEP.CFrame, MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = SKILLTEXTCOLOR, SoundID = 174580476, SoundPitch = MRANDOM(8,13)/10, SoundVolume = 2})
            for x = 1, math.ceil(XOffset) do
                for y = 1, math.ceil(YOffset) do
                    for z = 1, math.ceil(ZOffset) do
                        local SHARD = SpawnBullet(2)
                        SHARD.CFrame = Part.CFrame*CF((Part.Size.X/2-x/4)*1.2,(Part.Size.Y/2-y/4)*1.2,(Part.Size.Z/2-z/4)*1.2)
                        AMMO = AMMO - 1
                        table.insert(BULLETS,SHARD)
                    end
                end
            end
            coroutine.resume(coroutine.create(function()
                wait(0.2)
                local POS = TargetPoint
                local LOOP = 0
                for E = 1, #BULLETS do
                    LOOP = LOOP + 1
                    if LOOP >= 5 then
                        wait()
                        LOOP = 0
                    end
                    coroutine.resume(coroutine.create(function()
                        local BULLET = BULLETS[E]
                        ProjectileMovement(BULLET,GetSphereArea(Mouse.Hit.p,MRANDOM(2,25)),MRANDOM(13,68))
                        BULLET.Transparency = 1
                        Debris:AddItem(BULLET,0.3)
                        ApplyAoE(BULLET.Position,10,25,60,40,false)
                        WACKYEFFECT({EffectType = "Sphere", Size = VT(3,3,3), Size2 = VT(13,13,13), Transparency = 0, Transparency2 = 1, CFrame = CF(BULLET.Position), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = BULLET.Color, SoundID = 314970790, SoundPitch = MRANDOM(8,14)/10, SoundVolume = 3})
                        for i = 1, 2 do
                            WACKYEFFECT({EffectType = "Sphere", Size = VT(3,3,3), Size2 = VT(MRANDOM(6,8),MRANDOM(6,8),MRANDOM(6,8)), Transparency = 0, Transparency2 = 1, CFrame = CF(BULLET.Position), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = BULLET.Color, SoundID = nil, SoundPitch = nil, SoundVolume = nil})
                        end
                        WACKYEFFECT({Time = 60, EffectType = "Sphere", Size = VT(3,3,3), Size2 = VT(MRANDOM(6,8),MRANDOM(6,8),MRANDOM(6,8))*1.2, Transparency = 0, Transparency2 = 1, CFrame = CF(BULLET.Position), MoveToPos = GetSphereArea(BULLET.Position,2), RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = C3(20/255,20/255,20/255), SoundID = nil, SoundPitch = nil, SoundVolume = nil})
                    end))
                end
            end))
            for i=0, 0.1, 0.1 / Animation_Speed do
                Swait()
                TORSOMOVE = 15
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0 * COS(SINE / 6)), RAD(25), RAD(90 + 2 * SIN(SINE / 6))) * RIGHTSHOULDERC0, 2 / Animation_Speed)
            end
            TORSOMOVE = 0
            ATTACK = false
            Rooted = false
        end
        FlingEXEvent = false
    end
    function Meteor()
        if AMMO > 0 then
            ATTACK = true
            Rooted = true
            CreateSound(92597340, WEP, 3, 1, false)
            for i=0, 1, 0.1 / Animation_Speed do
                Swait()
                TORSOMOVE = 0
                FIRING:Emit(1)
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(170 + 2 * COS(SINE / 6)), RAD(25), RAD(15 + 2 * SIN(SINE / 6))) * RIGHTSHOULDERC0, 2 / Animation_Speed)
            end
            Rooted = false
            for i=0, 0.3, 0.1 / Animation_Speed do
                Swait()
                TORSOMOVE = -45
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0 * COS(SINE / 6)), RAD(25), RAD(90 + 2 * SIN(SINE / 6))) * RIGHTSHOULDERC0, 2 / Animation_Speed)
            end
            local BULLET = SpawnBullet(AMMO)
            local FIRE = ParticleEmitter({Speed = 0, Drag = 0, Size1 = BULLET.Size.X/2, Size2 = 0, Lifetime1 = 1, Lifetime2 = 2, Parent = BULLET, Emit = 100, Offset = 360, Enabled = true})
            coroutine.resume(coroutine.create(function()
                local SIZE = BULLET.Size.X*10
                local LOCATION = CF(BULLET.Position)*CF(0,15,0)
                for i = 1, 45 do
                    Swait()
                    BULLET.CFrame = Clerp(BULLET.CFrame,LOCATION,0.1)* ANGLES(RAD(0), RAD(SINE*1.5), RAD(SINE))
                end
                CreateSound(463593339, BULLET, 3, 2, false)
                ProjectileMovement(BULLET,Mouse.Hit.p,60)
                BULLET.Transparency = 1
                FIRE.Enabled = false
                Debris:AddItem(BULLET,2)
                ApplyAoE(BULLET.Position,SIZE*5,999,999,150,false)
                ApplyAoE(BULLET.Position,SIZE*15,7,12,40,false)
                local M = (SIZE*2)
                WACKYEFFECT({EffectType = "Sphere", Size = VT(3,3,3), Size2 = VT(10,10,10)*M, Transparency = 0, Transparency2 = 1, CFrame = CF(BULLET.Position), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = BULLET.Color, SoundID = 174580476, SoundPitch = MRANDOM(8,14)/15, SoundVolume = 10})
                for i = 1, 15 do
                    WACKYEFFECT({EffectType = "Sphere", Size = VT(3,3,3), Size2 = VT(MRANDOM(2,8),MRANDOM(2,8),MRANDOM(2,8))*M, Transparency = 0, Transparency2 = 1, CFrame = CF(BULLET.Position), MoveToPos = GetSphereArea(BULLET.Position,25), RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = BULLET.Color, SoundID = nil, SoundPitch = nil, SoundVolume = nil})
                end
                for i = 1, 3 do
                    WACKYEFFECT({Time = MRANDOM(10,40), EffectType = "Wave", Size = VT(2,0,2)*M, Size2 = VT(10,2,10)*M, Transparency = 0.4, Transparency2 = 1, CFrame = CF(BULLET.Position) * ANGLES(RAD(MRANDOM(0,15)), RAD(MRANDOM(0,360)), RAD(MRANDOM(0,15))), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = BULLET.Color, SoundID = nil, SoundPitch = 1, SoundVolume = 5})
                end
                for i = 1, 2 do
                    WACKYEFFECT({Time = 60, EffectType = "Sphere", Size = VT(3,3,3), Size2 = VT(MRANDOM(6,8),MRANDOM(6,8),MRANDOM(6,8))*M, Transparency = 0, Transparency2 = 1, CFrame = CF(BULLET.Position), MoveToPos = GetSphereArea(BULLET.Position,10), RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = C3(20/255,20/255,20/255), SoundID = nil, SoundPitch = nil, SoundVolume = nil})
                end
            end))
            AMMO = 0
            for i=0, 1, 0.1 / Animation_Speed do
                Swait()
                TORSOMOVE = 45
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.15, 0.5, -0.5) * ANGLES(RAD(0 * COS(SINE / 6)), RAD(25), RAD(-90 + 2 * SIN(SINE / 6))) * RIGHTSHOULDERC0, 2 / Animation_Speed)
            end
            TORSOMOVE = 0
            ATTACK = false
            Rooted = false
        end
    end
    function Yeah()
        ATTACK = true
        Rooted = false
        CreateSound(159882635, Head, 3, 1, false)
        for i=0, 1.5, 0.1 / Animation_Speed do
            Swait()
            TORSOMOVE = 35
            RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, -0.5) * ANGLES(RAD(90 + 2 * COS(SINE / 6)), RAD(0), RAD(0 + 2 * SIN(SINE / 6))) * RIGHTSHOULDERC0, 1 / Animation_Speed)
        end
        TORSOMOVE = 0
        ATTACK = false
        Rooted = false
    end
    
    --//=================================\\
    --||	  ASSIGN THINGS TO KEYS
    --\\=================================//
    
    mousedownevent:Connect(function()
        HOLD = true
        if ATTACK == false then
            Rapid()
        end
    end
    )
    mouseupevent:Connect(function()
    HOLD = false
    end)
    
    function KeyDown(Key)
        KEYHOLD = true
        if Key == "z" and ATTACK == false then
            BlockBullet()
        end
    
        if Key == "123123123" and ATTACK == false then
            Asteroid()
        end
    
        if Key == "123123123" and ATTACK == false then
            Meteor()
        end
    
        if Key == "t" and ATTACK == false then
            Yeah()
        end
    end
    function KeyUp(Key)
        KEYHOLD = false
    end
    
    Mouse.Button1Down:connect(function(NEWKEY)
        MouseDown(NEWKEY)
    end)
    Mouse.Button1Up:connect(function(NEWKEY)
        MouseUp(NEWKEY)
    end)
    Mouse.KeyDown:connect(function(NEWKEY)
        KeyDown(NEWKEY)
    end)
    Mouse.KeyUp:connect(function(NEWKEY)
        KeyUp(NEWKEY)
    end)
    
        
    
    --//=================================\\
    --\\=================================//
    
    function unanchor()
        for _, c in pairs(Character:GetChildren()) do
            if c:IsA("BasePart") and c ~= RootPart then
                c.Anchored = false
            end
        end
        if UNANCHOR == true then
            RootPart.Anchored = false
        else
            RootPart.Anchored = true
        end
    end
    
    --//=================================\\
    --||	WRAP THE WHOLE SCRIPT UP
    --\\=================================//
    
    Humanoid.Changed:connect(function(Jump)
        if Jump == "Jump" and (Disable_Jump == true) then
            Humanoid.Jump = false
        end
    end)
    
    coroutine.resume(coroutine.create(function()
        while true do
            Swait()
            for i = 1, 15 do
                if ATTACK == true then
                    break
                end
                Swait()
            end
            if AMMO < 15 and ATTACK == false then
                if AMMO < 0 then
                    AMMO = 0
                end
                AMMO = AMMO + 1
                WACKYEFFECT({Time = 15, EffectType = "Box", Size = VT(AMMO,AMMO,AMMO)/10, Size2 = VT(AMMO,AMMO,AMMO)/7, Transparency = 0, Transparency2 = 1, CFrame = WEP.CFrame, MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = SKILLTEXTCOLOR, SoundID = 84005018, SoundPitch = MRANDOM(8,13)/10, SoundVolume = 2})
            elseif AMMO >= 15 then
                AMMO = 15
            end
        end
    end))
    
    while true do
        Swait()
        script.Parent = WEAPONGUI
        ANIMATE.Parent = nil
        for _,v in next, Humanoid:GetPlayingAnimationTracks() do
            v:Stop();
        end
        SINE = SINE + CHANGE
        local TORSOVELOCITY = (RootPart.Velocity * VT(1, 0, 1)).magnitude
        local TORSOVERTICALVELOCITY = RootPart.Velocity.y
        local HITFLOOR = Raycast(RootPart.Position, (CF(RootPart.Position, RootPart.Position + VT(0, -1, 0))).lookVector, 4, Character)
        local WALKSPEEDVALUE = 7 / (Humanoid.WalkSpeed / 16)
        if ANIM == "Walk" and TORSOVELOCITY > 1 then
            RootJoint.C1 = Clerp(RootJoint.C1, ROOTC0 * CF(0, 0, -0.15 * COS(SINE / (WALKSPEEDVALUE / 2))) * ANGLES(RAD(0), RAD(0) - RootPart.RotVelocity.Y / 75, RAD(0)), 2 / Animation_Speed)
            Neck.C1 = Clerp(Neck.C1, CF(0, -0.5, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(2.5 * SIN(SINE / (WALKSPEEDVALUE / 2))), RAD(0), RAD(0) - Head.RotVelocity.Y / 30), 0.5 / Animation_Speed)
            RightHip.C1 = Clerp(RightHip.C1, CF(0.5, 0.875 - 0.125 * SIN(SINE / WALKSPEEDVALUE) - 0.15 * COS(SINE / WALKSPEEDVALUE*2), -0.125 * COS(SINE / WALKSPEEDVALUE) +0.1- 0.3 * COS(SINE / WALKSPEEDVALUE)) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0) - RightLeg.RotVelocity.Y / 75, RAD(0), RAD(80 * COS(SINE / WALKSPEEDVALUE))), 0.8 / Animation_Speed)
            LeftHip.C1 = Clerp(LeftHip.C1, CF(-0.5, 0.875 + 0.125 * SIN(SINE / WALKSPEEDVALUE) - 0.15 * COS(SINE / WALKSPEEDVALUE*2), 0.125 * COS(SINE / WALKSPEEDVALUE) +0.1+ 0.3 * COS(SINE / WALKSPEEDVALUE)) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0) + LeftLeg.RotVelocity.Y / 75, RAD(0), RAD(80 * COS(SINE / WALKSPEEDVALUE))), 0.8 / Animation_Speed)
        elseif (ANIM ~= "Walk") or (TORSOVELOCITY < 1) then
            RootJoint.C1 = Clerp(RootJoint.C1, ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
            Neck.C1 = Clerp(Neck.C1, CF(0, -0.5, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
            RightHip.C1 = Clerp(RightHip.C1, CF(0.5, 1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
            LeftHip.C1 = Clerp(LeftHip.C1, CF(-0.5, 1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        end
        if TORSOVERTICALVELOCITY > 1 and HITFLOOR == nil then
            ANIM = "Jump"
            RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0, 0, 0 ) * ANGLES(RAD(-5), RAD(0), RAD(0 + TORSOMOVE)), 1 / Animation_Speed)
            Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0, 0 , 0 + ((1) - 1)) * ANGLES(RAD(-25), RAD(0), RAD(0 - TORSOMOVE)), 1 / Animation_Speed)
            if ATTACK == false then
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-35), RAD(0), RAD(25 + 10 * COS(SINE / 12))) * RIGHTSHOULDERC0, 1 / Animation_Speed)
            end
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-35), RAD(0), RAD(-25 - 10 * COS(SINE / 12))) * LEFTSHOULDERC0, 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1, -0.4, -0.6) * ANGLES(RAD(1), RAD(90), RAD(0)) * ANGLES(RAD(-1 * SIN(SINE / 6)), RAD(0), RAD(0)), 1 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-1 * SIN(SINE / 6)), RAD(0), RAD(0)), 1 / Animation_Speed)
        elseif TORSOVERTICALVELOCITY < -1 and HITFLOOR == nil then
            ANIM = "Fall"
            RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0, 0, 0 ) * ANGLES(RAD(15), RAD(0), RAD(0 + TORSOMOVE)), 1 / Animation_Speed)
            Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0, 0 , 0 + ((1) - 1)) * ANGLES(RAD(15), RAD(0), RAD(0 - TORSOMOVE)), 1 / Animation_Speed)
            if ATTACK == false then
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35 - 4 * COS(SINE / 6)), RAD(0), RAD(45 + 10 * COS(SINE / 12))) * RIGHTSHOULDERC0, 1 / Animation_Speed)
            end
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(35 - 4 * COS(SINE / 6)), RAD(0), RAD(-45 - 10 * COS(SINE / 12))) * LEFTSHOULDERC0, 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1, -0.3, -0.7) * ANGLES(RAD(-25 + 5 * SIN(SINE / 12)), RAD(90), RAD(0)) * ANGLES(RAD(-1 * SIN(SINE / 6)), RAD(0), RAD(0)), 1 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -0.8, -0.3) * ANGLES(RAD(-10), RAD(-80), RAD(0)) * ANGLES(RAD(-1 * SIN(SINE / 6)), RAD(0), RAD(0)), 1 / Animation_Speed)
        elseif TORSOVELOCITY < 1 and HITFLOOR ~= nil then
            ANIM = "Idle"
            RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0, 0, 0 + 0.05 * COS(SINE / 12)) * ANGLES(RAD(0), RAD(0), RAD(-25 + TORSOMOVE)), 1 / Animation_Speed)
            Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0 - 2.5 * SIN(SINE / 12)), RAD(0), RAD(25 - TORSOMOVE)), 1 / Animation_Speed)
            if ATTACK == false then
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(2 * COS(SINE / 6)), RAD(25), RAD(55 + 2 * SIN(SINE / 6))) * RIGHTSHOULDERC0, 1 / Animation_Speed)
            end
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.15, 0.5, 0.45) * ANGLES(RAD(-10), RAD(0), RAD(45)) * LEFTSHOULDERC0, 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1.1, -1 - 0.05 * COS(SINE / 12), -0.1) * ANGLES(RAD(0), RAD(100), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(SINE / 12), 0) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-1), RAD(0), RAD(0)), 1 / Animation_Speed)
        elseif TORSOVELOCITY > 1 and HITFLOOR ~= nil then
            ANIM = "Walk"
            RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0, 0, -0.05) * ANGLES(RAD(35), RAD(2.5 * SIN(SINE / WALKSPEEDVALUE)), RAD(0 + TORSOMOVE)), 1 / Animation_Speed)
            Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-25 - 1 * SIN(SINE / (WALKSPEEDVALUE / 2))), RAD(0), RAD(0 - TORSOMOVE)), 1 / Animation_Speed)
            if ATTACK == false then
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(45)) * RIGHTSHOULDERC0, 1 / Animation_Speed)
            end
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-55 - 5 * SIN(SINE / (WALKSPEEDVALUE / 2))), RAD(0), RAD(-5 + 6 * SIN(SINE / (WALKSPEEDVALUE)))) * LEFTSHOULDERC0, 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1 , -1, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 2 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 2 / Animation_Speed)
        end
        WEP.CFrame = Clerp(WEP.CFrame, CF(RightArm.CFrame*CF(0,-(1+(AMMO/10)),0).p) * ANGLES(RAD(0), RAD(SINE*1.5), RAD(SINE)), 0.35)
        WEP.Size = VT(AMMO,AMMO,AMMO)/10
        if AMMO <= 0 then
            WEP.Transparency = 1
        else
            WEP.Transparency = 0
        end
        unanchor()
        Humanoid.MaxHealth = "inf"
        Humanoid.Health = "inf"
        if Rooted == false then
            Disable_Jump = false
            Humanoid.WalkSpeed = Speed
        elseif Rooted == true then
            Disable_Jump = true
            Humanoid.WalkSpeed = 0
        end
        sick.SoundId = "rbxassetid://343137910"
        sick.Looped = true
        sick.Pitch = 1
        sick.Volume = 1
        sick.Playing = true
    end
    
    --//=================================\\
    --\\=================================//
    
    
    
    
    
    --//====================================================\\--
    --||			  		 END OF SCRIPT
    --\\====================================================//--
